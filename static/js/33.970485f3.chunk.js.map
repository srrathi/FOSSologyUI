{"version":3,"sources":["pages/Upload/Vcs/index.jsx","shared/helper.js","services/groups.js","api/groups.js","components/Upload/CommonFields/IgnoreScm/index.jsx","components/Upload/CommonFields/AccessLevel/index.jsx","components/Upload/CommonFields/OptionalAnalysis/index.jsx","components/Upload/CommonFields/LicenseDecider/index.jsx","components/Upload/CommonFields/UploadReuse/index.jsx","components/Upload/CommonFields/index.jsx","services/jobs.js","api/jobs.js","api/upload.js","services/upload.js"],"names":["UploadFromVcs","uploadId","initialState","folderId","uploadDescription","accessLevel","ignoreScm","uploadType","initialScanFileData","analysis","defaultAgentsList","decider","nomosMonk","bulkReused","newScanner","ojoDecider","reuse","reuseUpload","reuseGroup","getLocalStorage","default_group","reuseMain","reuseEnhanced","reuseReport","reuseCopyright","useState","uploadVcsData","setUploadVcsData","id","name","description","parent","folderList","setFolderList","scanFileData","setScanFileData","vcsType","vcsUrl","vcsBranch","vcsName","vcsUsername","vcsPassword","vcsData","setVcsData","message","setMessage","loading","setLoading","showMessage","setShowMessage","handleChange","e","target","type","checked","files","value","handleVcsChange","useEffect","getAllFolders","then","res","catch","error","handleError","title","className","text","setShow","onChange","options","property","htmlFor","rows","handleScanChange","Object","keys","find","parseInt","onClick","preventDefault","createUploadVcs","window","scrollTo","top","messages","queuedUpload","getUploadById","setTimeout","scheduleAnalysis","scheduledAnalysis","finally","as","animation","size","role","randomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","getDate","day","Date","prototype","addDays","days","currentDate","this","valueOf","setDate","toISOString","split","getNameInitials","nameList","substring","toUpperCase","map","n","index","join","getReportIdFromUrl","url","matches","match","getFileNameFromContentDispostionHeader","header","contentDispostion","fileName","trim","getAllGroups","fetchAllGroups","endpoints","admin","groups","getAll","sendRequest","method","headers","Authorization","getToken","addGroupName","getAllGroupsApi","setLocalStorage","createGroup","create","createGroupApi","IgnoreScm","AccessLevel","OptionalAnalysis","Input","bucket","copyrightEmailAuthor","ecc","keyword","mime","monk","nomos","ojo","package","LicenseDecider","UploadReuse","groupList","uploadList","uploadName","reuseFolder","reuseData","setReuseData","prevData","getUploadsFolderId","valueProperty","noDataMessage","noGroup","noFolder","noUploads","CommonFields","scanData","jobs","body","copyright_email_author","nomos_monk","bulk_reused","new_scanner","ojo_decider","reuse_upload","reuse_group","reuse_main","reuse_enhanced","reuse_report","reuse_copyright","scheduleAnalysisApi","scheduleReport","reportFormat","scheduleReportApi","downloadReport","reportId","isFile","downloadReportApi","createUploadApi","fileInput","upload","uploadCreate","formdata","FormData","append","isMultipart","propTypes","PropTypes","number","string","bool","createUploadFile","credentials","createUploadVcsApi","createUploadUrl","createUploadUrlApi","retries","getId","getUploadByIdApi"],"mappings":"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","file":"static/js/33.970485f3.chunk.js","sourcesContent":["/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport messages from \"constants/messages\";\n\n// Title\nimport Title from \"components/Title\";\n\n// Widgets\nimport { Alert, Button, InputContainer, Spinner } from \"components/Widgets\";\n\n// Common Fields for all the Uploads\nimport CommonFields from \"components/Upload/CommonFields\";\n\n// Required functions for calling APIs\nimport { getAllFolders } from \"services/folders\";\nimport { createUploadVcs, getUploadById } from \"services/upload\";\nimport { scheduleAnalysis } from \"services/jobs\";\n\n// Default Agents list\nimport { defaultAgentsList, getLocalStorage } from \"shared/storageHelper\";\n\n// Helper function for error handling\nimport { handleError } from \"shared/helper\";\n\nconst UploadFromVcs = () => {\n  const initialState = {\n    folderId: 1,\n    uploadDescription: \"\",\n    accessLevel: \"protected\",\n    ignoreScm: false,\n    uploadType: \"vcs\",\n  };\n  const initialScanFileData = {\n    analysis: defaultAgentsList(),\n    decider: {\n      nomosMonk: false,\n      bulkReused: false,\n      newScanner: false,\n      ojoDecider: false,\n    },\n    reuse: {\n      reuseUpload: 0,\n      reuseGroup: getLocalStorage(\"user\")?.default_group,\n      reuseMain: false,\n      reuseEnhanced: false,\n      reuseReport: false,\n      reuseCopyright: false,\n    },\n  };\n  const initialFolderList = [\n    {\n      id: 1,\n      name: \"Software Repository\",\n      description: \"Top Folder\",\n      parent: null,\n    },\n  ];\n  const typeVcs = [\n    { id: \"git\", type: \"Git\" },\n    { id: \"svn\", type: \"SVN\" },\n  ];\n\n  const initialVcsData = {\n    vcsType: \"git\",\n    vcsUrl: \"\",\n    vcsBranch: \"\",\n    vcsName: \"\",\n    vcsUsername: \"\",\n    vcsPassword: \"\",\n  };\n\n  // Upload Id required for scheduling Analysis\n  let uploadId;\n\n  // Data required for creating the upload\n  const [uploadVcsData, setUploadVcsData] = useState(initialState);\n\n  // Setting the list for all the folders names\n  const [folderList, setFolderList] = useState(initialFolderList);\n\n  // Setting the data for scheduling analysis of an uploads\n  const [scanFileData, setScanFileData] = useState(initialScanFileData);\n\n  // Data required for creating the upload from Version Control System\n  const [vcsData, setVcsData] = useState(initialVcsData);\n\n  // State Variables for handling Error Boundaries\n  const [message, setMessage] = useState();\n  const [loading, setLoading] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    createUploadVcs(uploadVcsData, vcsData)\n      .then((res) => {\n        window.scrollTo({ top: 0 });\n        setMessage({\n          type: \"success\",\n          text: `${messages.queuedUpload} #${res.message}`,\n        });\n        uploadId = res.message;\n      })\n      // Calling the api for maximum 10 times to check whether the upload is unpacked by the agent\n      .then(() => getUploadById(uploadId, 10))\n      .then(() =>\n        setTimeout(\n          () =>\n            scheduleAnalysis(uploadVcsData.folderId, uploadId, scanFileData)\n              .then(() => {\n                window.scrollTo({ top: 0 });\n                setMessage({\n                  type: \"success\",\n                  text: messages.scheduledAnalysis,\n                });\n                setUploadVcsData(initialState);\n                setScanFileData(initialScanFileData);\n              })\n              .catch((error) => {\n                handleError(error, setMessage);\n              }),\n          200000\n        )\n      )\n      .catch((error) => {\n        handleError(error, setMessage);\n      })\n      .finally(() => {\n        setLoading(false);\n        setShowMessage(true);\n      });\n  };\n  const handleChange = (e) => {\n    if (e.target.type === \"checkbox\") {\n      setUploadVcsData({\n        ...uploadVcsData,\n        [e.target.name]: e.target.checked,\n      });\n    } else if (e.target.type === \"file\") {\n      setUploadVcsData({\n        ...uploadVcsData,\n        [e.target.name]: e.target.files[0],\n      });\n    } else {\n      setUploadVcsData({\n        ...uploadVcsData,\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n  const handleScanChange = (e) => {\n    const { name } = e.target;\n    if (\n      Object.keys(scanFileData.analysis).find((analysis) => analysis === name)\n    ) {\n      setScanFileData({\n        ...scanFileData,\n        analysis: {\n          ...scanFileData.analysis,\n          [e.target.name]: e.target.checked,\n        },\n      });\n    } else if (\n      Object.keys(scanFileData.decider).find((decider) => decider === name)\n    ) {\n      setScanFileData({\n        ...scanFileData,\n        decider: {\n          ...scanFileData.decider,\n          [e.target.name]: e.target.checked,\n        },\n      });\n    } else {\n      setScanFileData({\n        ...scanFileData,\n        reuse: {\n          ...scanFileData.reuse,\n          [e.target.name]:\n            e.target.type === \"checkbox\"\n              ? e.target.checked\n              : parseInt(e.target.value, 10) || e.target.value,\n        },\n      });\n    }\n  };\n  const handleVcsChange = (e) => {\n    setVcsData({\n      ...vcsData,\n      [e.target.name]: e.target.value,\n    });\n  };\n  useEffect(() => {\n    getAllFolders()\n      .then((res) => {\n        setFolderList(res);\n      })\n      .catch((error) => {\n        handleError(error, setMessage);\n        setShowMessage(true);\n      });\n  }, []);\n  return (\n    <>\n      <Title title=\"Upload from Version Control System\" />\n      <div className=\"main-container my-3\">\n        {showMessage && (\n          <Alert\n            type={message.type}\n            message={message.text}\n            setShow={setShowMessage}\n          />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-md-12 col-sm-12 col-12\">\n            <h3 className=\"font-size-main-heading\">\n              Upload From Version Control System\n            </h3>\n            <p className=\"font-demi my-3\">\n              To manage your own group permissions go into Admin &gt; Groups\n              &gt; Manage Group Users. To manage permissions for this one\n              upload, go to Admin &gt; Upload Permissions.\n            </p>\n            <p>\n              You can upload source code from a version control system; one risk\n              is that FOSSology will store your username/password of a\n              repository to database, also run checkout source code from command\n              line with username and password explicitly.\n            </p>\n            <form className=\"my-3\">\n              <InputContainer\n                type=\"select\"\n                name=\"folderId\"\n                id=\"upload-folder-id\"\n                onChange={(e) => handleChange(e)}\n                options={folderList}\n                property=\"name\"\n                value={folderList?.id}\n              >\n                Select the folder for storing the uploaded files:\n              </InputContainer>\n              <InputContainer\n                type=\"select\"\n                name=\"vcsType\"\n                id=\"upload-vcs-type\"\n                onChange={(e) => handleVcsChange(e)}\n                options={typeVcs}\n                property=\"type\"\n              >\n                Select the type of version control system:\n              </InputContainer>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsUrl\"\n                id=\"upload-vcs-url-repo\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsUrl}\n              >\n                Enter the URL of the repo:\n              </InputContainer>\n              <div className=\"font-size-small\">\n                Note: The URL can begin with HTTP://, HTTPS:// . When do git\n                upload, if https url fails, please try http URL.\n              </div>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsBranch\"\n                id=\"upload-vcs-branch\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsBranch}\n              >\n                (Optional for Git) Branch name:\n              </InputContainer>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsUsername\"\n                id=\"upload-vcs-username\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsUsername}\n              >\n                (Optional) Username:\n              </InputContainer>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsPassword\"\n                id=\"upload-vcs-branch\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsPassword}\n              >\n                (Optional) Password:\n              </InputContainer>\n              <InputContainer\n                type=\"text\"\n                name=\"vcsName\"\n                id=\"upload-vcs-name\"\n                onChange={(e) => handleVcsChange(e)}\n                value={vcsData.vcsName}\n              >\n                (Optional) Enter a viewable name for this file (directory):\n              </InputContainer>\n              <div className=\"font-size-small\">\n                Note: If no name is provided, then the uploaded file (directory)\n                name will be used.\n              </div>\n              <div className=\"my-2\">\n                <label htmlFor=\"upload\" className=\"font-demi w-100\">\n                  (Optional) Enter a description of this file:\n                  <textarea\n                    name=\"uploadDescription\"\n                    className=\"form-control font-regular mt-2\"\n                    value={uploadVcsData.uploadDescription}\n                    id=\"upload-file-description\"\n                    rows=\"3\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                </label>\n              </div>\n              <CommonFields\n                accessLevel={uploadVcsData.accessLevel}\n                ignoreScm={uploadVcsData.ignoreScm}\n                analysis={scanFileData.analysis}\n                decider={scanFileData.decider}\n                reuse={scanFileData.reuse}\n                handleChange={handleChange}\n                handleScanChange={handleScanChange}\n              />\n              <Button type=\"submit\" onClick={handleSubmit} className=\"mt-4\">\n                {loading ? (\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                ) : (\n                  \"Upload\"\n                )}\n              </Button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UploadFromVcs;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\n// Random string generator\nexport const randomString = (length) => {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\n// Get date in YYYY-MM-DD format\nexport const getDate = (day) => {\n  // eslint-disable-next-line no-extend-native, func-names\n  Date.prototype.addDays = function (days) {\n    const currentDate = new Date(this.valueOf());\n    currentDate.setDate(currentDate.getDate() + days);\n    return currentDate;\n  };\n  const date = new Date();\n  return date.addDays(day).toISOString().split(\"T\")[0];\n};\n\n// Returns the initials of given name\nexport const getNameInitials = (name) => {\n  if (!name) {\n    return name;\n  }\n  // Convert name into array of words\n  const nameList = name.split(\" \");\n  // For single word name return first 2 characters\n  if (nameList.length === 1) {\n    return nameList[0].substring(0, 2).toUpperCase();\n  }\n  // Return the first 3 characters of the initials\n  return nameList\n    .map((n, index) => {\n      if (index < 3) {\n        return n[0];\n      }\n      return null;\n    })\n    .join(\"\")\n    .toUpperCase();\n};\n\n// Common handle error component\nexport const handleError = (error, setMessage) => {\n  window.scrollTo({ top: 0 });\n  setMessage({\n    type: \"danger\",\n    text: error.message,\n  });\n};\n\n// Extract report id from url\nexport const getReportIdFromUrl = (url) => {\n  const matches = url.match(/report\\/([0-9]+)/);\n  if (matches != null) {\n    return matches[1];\n  }\n  return null;\n};\n\nexport const getFileNameFromContentDispostionHeader = (header) => {\n  const contentDispostion = header.split(\";\");\n  let fileName = \"download.txt\";\n  // eslint-disable-next-line no-restricted-syntax\n  for (const headerElement of contentDispostion) {\n    const matches = headerElement.trim().match(/filename=\"(.*)\"/);\n    if (matches != null) {\n      fileName = matches[1];\n      break;\n    }\n  }\n\n  return fileName;\n};\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport { getAllGroupsApi, createGroupApi } from \"api/groups\";\nimport { setLocalStorage, getLocalStorage } from \"shared/storageHelper\";\n\n// Fetching all the groups\nexport const getAllGroups = () => {\n  return getLocalStorage(\"groups\");\n};\n\nexport const fetchAllGroups = () => {\n  return getAllGroupsApi().then((res) => {\n    setLocalStorage(\"groups\", res);\n    return res;\n  });\n};\n\n// Creating a group\nexport const createGroup = (name) => {\n  return createGroupApi(name).then((res) => {\n    return res;\n  });\n};\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Fetching all the groups\nexport const getAllGroupsApi = () => {\n  const url = endpoints.admin.groups.getAll();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    addGroupName: false,\n  });\n};\n\n// Creating a group\nexport const createGroupApi = (name) => {\n  const url = endpoints.admin.groups.create();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      Authorization: getToken(),\n      name,\n    },\n    addGroupName: false,\n  });\n};\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction IgnoreScm({ ignoreScm, handleChange }) {\n  return (\n    <div id=\"upload-ignore-files\" className=\"mt-4\">\n      <InputContainer\n        type=\"checkbox\"\n        checked={ignoreScm}\n        name=\"ignoreScm\"\n        id=\"upload-ignore-scm\"\n        onChange={(e) => handleChange(e)}\n      >\n        Ignore SCM files (Git, SVN, TFS) and files with particular\n        Mimetype&nbsp;\n        <Tooltip title=\"Configure mimetypes from Admin-Customize-Skip MimeTypes from scanning\" />\n      </InputContainer>\n    </div>\n  );\n}\n\nIgnoreScm.propTypes = {\n  ignoreScm: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default IgnoreScm;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction AccessLevel({ accessLevel, handleChange }) {\n  return (\n    <div id=\"upload-access-level\" className=\"mt-4\">\n      <InputContainer\n        type=\"radio\"\n        value=\"private\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-private\"\n        checked={accessLevel === \"private\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Visible only for active group&nbsp;\n        <Tooltip title=\"which is the currently selected group\" />\n      </InputContainer>\n      <InputContainer\n        type=\"radio\"\n        value=\"protected\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-protected\"\n        checked={accessLevel === \"protected\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Visible for all groups&nbsp;\n        <Tooltip title=\"which are accessible by you now\" />\n      </InputContainer>\n      <InputContainer\n        type=\"radio\"\n        value=\"public\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-public\"\n        checked={accessLevel === \"public\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Make Public&nbsp;\n        <Tooltip title=\"visible for all users\" />\n      </InputContainer>\n    </div>\n  );\n}\n\nAccessLevel.propTypes = {\n  accessLevel: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default AccessLevel;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport InputContainer from \"components/Widgets/Input\";\n\nfunction OptionalAnalysis({ analysis, handleChange }) {\n  return (\n    <div id=\"uplod-optional-analysis\" className=\"mt-4\">\n      <p className=\"font-demi\">Select optional analysis</p>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.bucket}\n        name=\"bucket\"\n        id=\"upload-analysis-bucket\"\n        onChange={(e) => handleChange(e)}\n      >\n        Bucket Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.copyrightEmailAuthor}\n        name=\"copyrightEmailAuthor\"\n        id=\"upload-analysis-copyright-email-author\"\n        onChange={(e) => handleChange(e)}\n      >\n        Copyright/Email/URL/Author Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.ecc}\n        name=\"ecc\"\n        id=\"upload-analysis-ecc\"\n        onChange={(e) => handleChange(e)}\n      >\n        ECC Analysis, scanning for text fragments potentially relevant for\n        export control\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.keyword}\n        name=\"keyword\"\n        id=\"upload-analysis-keyword\"\n        onChange={(e) => handleChange(e)}\n      >\n        Keyword Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.mime}\n        name=\"mime\"\n        id=\"upload-analysis-mime\"\n        onChange={(e) => handleChange(e)}\n      >\n        MIME-type Analysis (Determine mimetype of every file. Not needed for\n        licenses or buckets)\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.monk}\n        name=\"monk\"\n        id=\"upload-analysis-monk\"\n        onChange={(e) => handleChange(e)}\n      >\n        Monk License Analysis, scanning for licenses performing a text\n        comparison\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.nomos}\n        name=\"nomos\"\n        id=\"upload-analysis-nomos\"\n        onChange={(e) => handleChange(e)}\n      >\n        Nomos License Analysis, scanning for licenses using regular expressions\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.ojo}\n        name=\"ojo\"\n        id=\"upload-analysis-ojo\"\n        onChange={(e) => handleChange(e)}\n      >\n        Ojo License Analysis, scanning for licenses using\n        SPDX-License-Identifier\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.package}\n        name=\"package\"\n        id=\"upload-analysis-package\"\n        onChange={(e) => handleChange(e)}\n      >\n        Package Analysis (Parse package headers)\n      </InputContainer>\n    </div>\n  );\n}\n\nOptionalAnalysis.propTypes = {\n  analysis: PropTypes.shape({\n    bucket: PropTypes.bool.isRequired,\n    copyrightEmailAuthor: PropTypes.bool.isRequired,\n    ecc: PropTypes.bool.isRequired,\n    keyword: PropTypes.bool.isRequired,\n    mime: PropTypes.bool.isRequired,\n    monk: PropTypes.bool.isRequired,\n    nomos: PropTypes.bool.isRequired,\n    ojo: PropTypes.bool.isRequired,\n    package: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default OptionalAnalysis;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction LicenseDecider({ decider, handleChange }) {\n  return (\n    <div id=\"upload-concluded-license-decider\" className=\"mt-4\">\n      <p className=\"font-demi\">\n        Automatic Concluded License Decider,\n        <Tooltip title=\"only for relevant files\" /> based on\n      </p>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.nomosMonk}\n        name=\"nomosMonk\"\n        id=\"upload-decider-nomos-monk\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... scanners matches if all Nomos findings are within the Monk findings\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.ojoDecider}\n        name=\"ojoDecider\"\n        id=\"upload-decider-ojo-decider\"\n        onChange={(e) => handleChange(e)}\n      >\n        .. scanners matches if Ojo findings are no contradiction with other\n        findings\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.bulkReused}\n        name=\"bulkReused\"\n        id=\"upload-decider-bulk-reused\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... bulk phrases from reused packages\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.newScanner}\n        name=\"newScanner\"\n        id=\"upload-decider-new-scanner\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... new scanner results, i.e., decisions were marked as work in progress\n        if new scanner finds additional licenses\n      </InputContainer>\n    </div>\n  );\n}\n\nLicenseDecider.propTypes = {\n  decider: PropTypes.shape({\n    nomosMonk: PropTypes.bool.isRequired,\n    bulkReused: PropTypes.bool.isRequired,\n    newScanner: PropTypes.bool.isRequired,\n    ojoDecider: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default LicenseDecider;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\n// Required services for calling APIs\nimport { getAllFolders } from \"services/folders\";\nimport { getUploadsFolderId } from \"services/organizeUploads\";\nimport { getAllGroups } from \"services/groups\";\n\nimport messages from \"constants/messages\";\n\nconst UploadReuse = ({ reuse, handleChange }) => {\n  const initialGroupList = [{ id: 3, name: \"fossy\" }];\n  const initialFolderList = [\n    {\n      id: 1,\n      name: \"Software Repository\",\n      description: \"Top Folder\",\n      parent: null,\n    },\n  ];\n  const initialUploadList = [\n    {\n      folderId: 1,\n      uploadId: null,\n      uploadName: \"\",\n      uploadDescription: \"\",\n    },\n  ];\n  const [reuseData, setReuseData] = useState({\n    groupList: initialGroupList,\n    folderList: initialFolderList,\n    uploadList: initialUploadList,\n    reuseFolder: 1,\n  });\n\n  useEffect(() => {\n    setReuseData((prevData) => ({ ...prevData, groupList: getAllGroups() }));\n  }, []);\n\n  useEffect(() => {\n    getAllFolders(reuse.reuseGroup)\n      .then((res) => {\n        setReuseData((prevData) => ({ ...prevData, folderList: res }));\n      })\n      .catch(() => {});\n  }, [reuse.reuseGroup]);\n\n  useEffect(() => {\n    getUploadsFolderId(reuseData.reuseFolder, reuse.reuseGroup)\n      .then((res) => {\n        setReuseData((prevData) => ({ ...prevData, uploadList: res }));\n      })\n      .catch(() => {});\n  }, [reuse.reuseGroup, reuseData.reuseFolder]);\n\n  const handleReuseDataChange = (e) => {\n    setReuseData((prevData) => ({\n      ...prevData,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  return (\n    <div id=\"upload-reuse\" className=\"mt-4\">\n      <p className=\"font-demi\">\n        (Optional) Reuse\n        <Tooltip title=\"copy clearing decisions if there is the same file hash between two files\" />\n      </p>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseGroup\"\n        id=\"upload-file-reuse-group\"\n        onChange={handleChange}\n        options={reuseData.groupList}\n        value={reuse.reuseGroup}\n        property=\"name\"\n        valueProperty=\"name\"\n        noDataMessage={messages.noGroup}\n      >\n        Select the reuse group:\n      </InputContainer>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseFolder\"\n        id=\"upload-file-reuse-folder\"\n        onChange={handleReuseDataChange}\n        options={reuseData.folderList}\n        value={reuseData.reuseFolder}\n        property=\"name\"\n        noDataMessage={messages.noFolder}\n      >\n        Select the reuse folder:\n      </InputContainer>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseUpload\"\n        id=\"upload-file-reuse-upload\"\n        onChange={handleChange}\n        options={reuseData.uploadList}\n        value={parseInt(reuse.reuseUpload, 10)}\n        property=\"uploadname\"\n        valueProperty=\"id\"\n        noDataMessage={messages.noUploads}\n      >\n        Select the reuse upload:\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseEnhanced}\n        name=\"reuseEnhanced\"\n        id=\"upload-file-reuse-enhanced\"\n        onChange={handleChange}\n      >\n        Enhanced reuse (slower)\n        <Tooltip title=\"will copy a clearing decision if the two files differ by one line determined by a diff tool\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseMain}\n        name=\"reuseMain\"\n        id=\"upload-file-reuse-main\"\n        onChange={handleChange}\n      >\n        Reuse main license/s\n        <Tooltip title=\"will copy a main license decision if any\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseReport}\n        name=\"reuseReport\"\n        id=\"upload-file-reuse-report\"\n        onChange={handleChange}\n      >\n        Reuse report configuration settings\n        <Tooltip title=\"use to copy all the information from conf page(if any)\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseCopyright}\n        name=\"reuseCopyright\"\n        id=\"upload-file-reuse-copyright\"\n        onChange={handleChange}\n      >\n        Reuse edited and deactivated copyrights\n        <Tooltip title=\"use to copy edited and deactivated copyrights from the reused package\" />\n      </InputContainer>\n    </div>\n  );\n};\n\nUploadReuse.propTypes = {\n  reuse: PropTypes.shape({\n    reuseUpload: PropTypes.number.isRequired,\n    reuseGroup: PropTypes.string.isRequired,\n    reuseMain: PropTypes.bool.isRequired,\n    reuseEnhanced: PropTypes.bool.isRequired,\n    reuseReport: PropTypes.bool.isRequired,\n    reuseCopyright: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default UploadReuse;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IgnoreScm from \"./IgnoreScm\";\nimport AccessLevel from \"./AccessLevel\";\nimport OptionalAnalysis from \"./OptionalAnalysis\";\nimport LicenseDecider from \"./LicenseDecider\";\nimport UploadReuse from \"./UploadReuse\";\n\nfunction CommonFields({\n  accessLevel,\n  ignoreScm,\n  analysis,\n  decider,\n  reuse,\n  handleChange,\n  handleScanChange,\n}) {\n  return (\n    <>\n      {ignoreScm && (\n        <IgnoreScm ignoreScm={ignoreScm} handleChange={handleChange} />\n      )}\n      {accessLevel && (\n        <AccessLevel accessLevel={accessLevel} handleChange={handleChange} />\n      )}\n      {analysis && (\n        <OptionalAnalysis analysis={analysis} handleChange={handleScanChange} />\n      )}\n      {decider && (\n        <LicenseDecider decider={decider} handleChange={handleScanChange} />\n      )}\n      {reuse && <UploadReuse reuse={reuse} handleChange={handleScanChange} />}\n    </>\n  );\n}\n\nCommonFields.propTypes = {\n  accessLevel: PropTypes.string,\n  ignoreScm: PropTypes.bool,\n  analysis: PropTypes.shape({\n    bucket: PropTypes.bool.isRequired,\n    copyrightEmailAuthor: PropTypes.bool.isRequired,\n    ecc: PropTypes.bool.isRequired,\n    keyword: PropTypes.bool.isRequired,\n    mime: PropTypes.bool.isRequired,\n    monk: PropTypes.bool.isRequired,\n    nomos: PropTypes.bool.isRequired,\n    ojo: PropTypes.bool.isRequired,\n    package: PropTypes.bool.isRequired,\n  }).isRequired,\n  decider: PropTypes.shape({\n    nomosMonk: PropTypes.bool.isRequired,\n    bulkReused: PropTypes.bool.isRequired,\n    newScanner: PropTypes.bool.isRequired,\n    ojoDecider: PropTypes.bool.isRequired,\n  }).isRequired,\n  reuse: PropTypes.shape({\n    reuseUpload: PropTypes.number.isRequired,\n    reuseGroup: PropTypes.string.isRequired,\n    reuseMain: PropTypes.bool.isRequired,\n    reuseEnhanced: PropTypes.bool.isRequired,\n    reuseReport: PropTypes.bool.isRequired,\n    reuseCopyright: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleScanChange: PropTypes.func.isRequired,\n};\n\nexport default CommonFields;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport {\n  getJobApi,\n  scheduleAnalysisApi,\n  scheduleReportApi,\n  downloadReportApi,\n} from \"api/jobs\";\nimport { getReportIdFromUrl } from \"shared/helper\";\n\n// Fetching the jobs\nexport const getJob = (jobId) => {\n  return getJobApi(jobId).then((res) => {\n    return res.entity.map((jsonObject) => {\n      const tag = {};\n      tag.stats = { score: jsonObject.score };\n      return tag;\n    });\n  });\n};\n\n// Scheduling the analysis for the uploads\nexport const scheduleAnalysis = (folderId, uploadId, scanData) => {\n  return scheduleAnalysisApi(folderId, uploadId, scanData).then((res) => {\n    return res;\n  });\n};\n\nexport const scheduleReport = (uploadId, reportFormat) => {\n  return scheduleReportApi(uploadId, reportFormat).then((res) => {\n    return res;\n  });\n};\n\nexport const downloadReport = (url) => {\n  const reportId = getReportIdFromUrl(url);\n  if (reportId === null) {\n    return null;\n  }\n  return downloadReportApi(reportId).then((res) => {\n    return res;\n  });\n};\n\nexport default getJob;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Fetching the jobs\nexport const getJobApi = ({ jobId }) => {\n  const url = endpoints.jobs.details(jobId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n  });\n};\n\n// Scheduling the analysis for the uploads\nexport const scheduleAnalysisApi = (folderId, uploadId, scanData) => {\n  const url = endpoints.jobs.scheduleAnalysis();\n  const { bucket, copyrightEmailAuthor, ecc, keyword, mime, monk, nomos, ojo } =\n    scanData?.analysis;\n  const { nomosMonk, bulkReused, newScanner, ojoDecider } = scanData?.decider;\n  const {\n    reuseUpload,\n    reuseGroup,\n    reuseMain,\n    reuseEnhanced,\n    reuseReport,\n    reuseCopyright,\n  } = scanData?.reuse;\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      Authorization: getToken(),\n      folderId,\n      uploadId,\n    },\n    body: {\n      analysis: {\n        bucket,\n        copyright_email_author: copyrightEmailAuthor,\n        ecc,\n        keyword,\n        mime,\n        monk,\n        nomos,\n        ojo,\n        package: scanData.analysis.package,\n      },\n      decider: {\n        nomos_monk: nomosMonk,\n        bulk_reused: bulkReused,\n        new_scanner: newScanner,\n        ojo_decider: ojoDecider,\n      },\n      reuse: {\n        reuse_upload: reuseUpload,\n        reuse_group: reuseGroup,\n        reuse_main: reuseMain,\n        reuse_enhanced: reuseEnhanced,\n        reuse_report: reuseReport,\n        reuse_copyright: reuseCopyright,\n      },\n    },\n  });\n};\n\nexport const scheduleReportApi = (uploadId, reportFormat) => {\n  const url = endpoints.jobs.scheduleReport();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n      uploadId,\n      reportFormat,\n    },\n  });\n};\n\nexport const downloadReportApi = (reportId) => {\n  const url = endpoints.jobs.downloadReport(reportId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    isFile: true,\n  });\n};\n\nexport default getJobApi;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport PropTypes from \"prop-types\";\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Create Uploads from File\nexport const createUploadApi = (\n  folderId,\n  uploadDescription,\n  accessLevel,\n  ignoreScm,\n  fileInput\n) => {\n  const url = endpoints.upload.uploadCreate();\n  const formdata = new FormData();\n  if (fileInput) {\n    formdata.append(\"fileInput\", fileInput, fileInput?.name);\n  }\n  return sendRequest({\n    url,\n    method: \"POST\",\n    isMultipart: true,\n    headers: {\n      Authorization: getToken(),\n      folderId,\n      uploadDescription,\n      accessLevel,\n      ignoreScm,\n      uploadType: \"\",\n    },\n    body: formdata,\n  });\n};\n\n// Create Uploads from Version Control System\nexport const createUploadVcsApi = (header, body) => {\n  const url = endpoints.upload.uploadCreate();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    credentials: false,\n    headers: {\n      ...header,\n      Authorization: getToken(),\n    },\n    body,\n  });\n};\n\n// Create Uploads from URL\nexport const createUploadUrlApi = (header, body) => {\n  const url = endpoints.upload.uploadCreate();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      ...header,\n      Authorization: getToken(),\n    },\n    body,\n  });\n};\n\n// Getting a Upload by id\nexport const getUploadByIdApi = (uploadId, retries) => {\n  const url = endpoints.upload.getId(uploadId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    retries,\n    headers: {\n      Authorization: getToken(),\n    },\n  });\n};\n\ncreateUploadApi.propTypes = {\n  folderId: PropTypes.number,\n  uploadDescription: PropTypes.string,\n  accessLevel: PropTypes.string,\n  ignoreScm: PropTypes.bool,\n  fileInput: PropTypes.string,\n};\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport {\n  createUploadApi,\n  getUploadByIdApi,\n  createUploadVcsApi,\n  createUploadUrlApi,\n} from \"api/upload\";\n\n// Create Uploads from File\nexport const createUploadFile = ({\n  folderId,\n  uploadDescription,\n  accessLevel,\n  ignoreScm,\n  fileInput,\n}) => {\n  return createUploadApi(\n    folderId,\n    uploadDescription,\n    accessLevel,\n    ignoreScm,\n    fileInput\n  ).then((res) => {\n    return res;\n  });\n};\n\n// Create Uploads from Version Control System\nexport const createUploadVcs = (header, body) => {\n  return createUploadVcsApi(header, body).then((res) => {\n    return res;\n  });\n};\n\n// Create Uploads from URL\nexport const createUploadUrl = (header, body) => {\n  return createUploadUrlApi(header, body).then((res) => {\n    return res;\n  });\n};\n\n// Getting a Upload by id\nexport const getUploadById = (uploadId, retries) => {\n  return getUploadByIdApi(uploadId, retries).then((res) => {\n    return res;\n  });\n};\n"],"sourceRoot":""}