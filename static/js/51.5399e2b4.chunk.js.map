{"version":3,"sources":["pages/Organize/License/CandidateLicense/index.jsx"],"names":["AdviceLicenses","history","useHistory","useState","page","limit","kind","licenseData","setLicenseData","licenseDataList","setLicenseDataList","showMessage","setShowMessage","type","text","message","setMessage","useEffect","getAllLicense","then","res","catch","error","title","className","setShow","name","onChange","e","target","value","handleChange","options","id","property","placeholder","map","license","shortName","fullName","disabled","href","url","onClick","push","routes","organize","licenses","create"],"mappings":"qMAyKeA,UAxIQ,WACrB,IAAMC,EAAUC,cA+BhB,EAAsCC,mBAXjB,CACnBC,KAAM,EACNC,MAAO,GACPC,KAAM,cAQR,mBAAOC,EAAP,KAAoBC,EAApB,KAGA,EAA8CL,qBAA9C,mBAAOM,EAAP,KAAwBC,EAAxB,KAGA,EAAsCP,oBAAS,GAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KACA,EAA8BT,mBAbP,CACrBU,KAAM,UACNC,KAAM,KAWR,mBAAOC,EAAP,KAAgBC,EAAhB,KAqBA,OAbAC,qBAAU,WACRC,YAAcX,GACXY,MAAK,SAACC,GACLV,EAAmBU,MAEpBC,OAAM,SAACC,GACNN,EAAW,CACTH,KAAM,SACNC,KAAMQ,EAAMP,UAEdH,GAAe,QAElB,CAACL,IAEF,qCACE,cAAC,IAAD,CAAOgB,MAAM,uBACb,sBAAKC,UAAU,sBAAf,UACGb,GACC,cAAC,IAAD,CACEE,KAAME,EAAQF,KACdY,QAASb,EACTG,QAASA,EAAQD,OAGrB,qBAAKU,UAAU,MAAf,SACE,sBAAKA,UAAU,uCAAf,UACE,oBAAIA,UAAU,yBAAd,gCACA,uBACA,sBAAKA,UAAU,iCAAf,UACE,cAAC,IAAD,CACEE,KAAK,QACLb,KAAK,SACLc,SAAU,SAACC,GAAD,OAtCH,SAACA,GACpBpB,EAAe,2BACVD,GADS,kBAEXqB,EAAEC,OAAOH,KAAOE,EAAEC,OAAOC,SAmCCC,CAAaH,IAC9BI,QA9ES,CACrB,CACEC,GAAI,GACJH,MAAO,IAET,CACEG,GAAI,GACJH,MAAO,IAET,CACEG,GAAI,GACJH,MAAO,IAET,CACEG,GAAI,IACJH,MAAO,MAgEGI,SAAS,UAEX,uBACErB,KAAK,SACLW,UAAU,yBACVW,YAAY,cAGhB,wBAAOX,UAAU,6FAAjB,UACE,gCACE,qBAAIA,UAAU,8CAAd,UACE,sCACA,4CACA,2CACA,sCACA,qCACA,oDAGJ,gCACGf,GACCA,EAAgB2B,KAAI,SAACC,GAAD,OAClB,qBAAIb,UAAU,cAAd,UACE,uBACA,6BAAKa,EAAQC,YACb,6BAAKD,EAAQE,WACb,oBAAIf,UAAU,mCAAd,SACE,0BACEgB,UAAQ,EACRhB,UAAU,aACVM,MAAOO,EAAQvB,SAGnB,6BACE,mBAAG2B,KAAMJ,EAAQK,IAAjB,SAAuBL,EAAQK,QAEjC,yBAd+BL,EAAQJ,YAmBjD,cAAC,IAAD,CACEpB,KAAK,SACL8B,QAAS,kBAAM1C,EAAQ2C,KAAKC,IAAOC,SAASC,SAASC,SACrDxB,UAAU,OAHZ","file":"static/js/51.5399e2b4.chunk.js","sourcesContent":["/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\n// Title\nimport Title from \"components/Title\";\n\n// Widgets\nimport { Alert, Button, InputContainer } from \"components/Widgets\";\n\n// Required functions for calling APIs\nimport { getAllLicense } from \"services/licenses\";\n\n// Routes\nimport routes from \"constants/routes\";\n\nconst AdviceLicenses = () => {\n  const history = useHistory();\n  const entriesOptions = [\n    {\n      id: 10,\n      value: 10,\n    },\n    {\n      id: 25,\n      value: 25,\n    },\n    {\n      id: 50,\n      value: 50,\n    },\n    {\n      id: 100,\n      value: 100,\n    },\n  ];\n\n  const initialState = {\n    page: 1,\n    limit: 10,\n    kind: \"candidate\",\n  };\n  const initialMessage = {\n    type: \"success\",\n    text: \"\",\n  };\n\n  // Data required for getting the candidate license list\n  const [licenseData, setLicenseData] = useState(initialState);\n\n  // Setting the candidate licenses data to the table\n  const [licenseDataList, setLicenseDataList] = useState();\n\n  // State Variables for handling Error Boundaries\n  const [showMessage, setShowMessage] = useState(false);\n  const [message, setMessage] = useState(initialMessage);\n\n  const handleChange = (e) => {\n    setLicenseData({\n      ...licenseData,\n      [e.target.name]: e.target.value,\n    });\n  };\n  useEffect(() => {\n    getAllLicense(licenseData)\n      .then((res) => {\n        setLicenseDataList(res);\n      })\n      .catch((error) => {\n        setMessage({\n          type: \"danger\",\n          text: error.message,\n        });\n        setShowMessage(true);\n      });\n  }, [licenseData]);\n  return (\n    <>\n      <Title title=\"Candidate Licenses\" />\n      <div className=\"main-container my-3\">\n        {showMessage && (\n          <Alert\n            type={message.type}\n            setShow={setShowMessage}\n            message={message.text}\n          />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-12 col-md-12 col-sm-12 col-12\">\n            <h1 className=\"font-size-main-heading\">Candidate Licenses</h1>\n            <br />\n            <div className=\"d-flex justify-content-between\">\n              <InputContainer\n                name=\"limit\"\n                type=\"select\"\n                onChange={(e) => handleChange(e)}\n                options={entriesOptions}\n                property=\"value\"\n              />\n              <input\n                type=\"search\"\n                className=\"form-control w-25 mt-4\"\n                placeholder=\"Search\"\n              />\n            </div>\n            <table className=\"table table-striped text-primary-color font-size-medium table-responsive-md table-bordered\">\n              <thead>\n                <tr className=\"font-bold text-center font-size-sub-heading\">\n                  <th>Edit</th>\n                  <th>Short Name</th>\n                  <th>Full Name</th>\n                  <th>Text</th>\n                  <th>URL</th>\n                  <th>Merge Request</th>\n                </tr>\n              </thead>\n              <tbody>\n                {licenseDataList &&\n                  licenseDataList.map((license) => (\n                    <tr className=\"text-center\" key={license.id}>\n                      <td />\n                      <td>{license.shortName}</td>\n                      <td>{license.fullName}</td>\n                      <td className=\"py-0 px-0 candidate-license-text\">\n                        <textarea\n                          disabled\n                          className=\"w-100 px-3\"\n                          value={license.text}\n                        />\n                      </td>\n                      <td>\n                        <a href={license.url}>{license.url}</a>\n                      </td>\n                      <td />\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n            <Button\n              type=\"button\"\n              onClick={() => history.push(routes.organize.licenses.create)}\n              className=\"mt-4\"\n            >\n              New License\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AdviceLicenses;\n"],"sourceRoot":""}