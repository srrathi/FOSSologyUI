{"version":3,"sources":["pages/Upload/File/index.jsx","shared/helper.js","services/groups.js","api/groups.js","components/Upload/CommonFields/IgnoreScm/index.jsx","components/Upload/CommonFields/AccessLevel/index.jsx","components/Upload/CommonFields/OptionalAnalysis/index.jsx","components/Upload/CommonFields/LicenseDecider/index.jsx","components/Upload/CommonFields/UploadReuse/index.jsx","components/Upload/CommonFields/index.jsx","services/jobs.js","api/jobs.js","api/upload.js","services/upload.js"],"names":["UploadFile","uploadId","initialState","folderId","uploadDescription","accessLevel","ignoreScm","fileInput","initialScanFileData","analysis","defaultAgentsList","decider","nomosMonk","bulkReused","newScanner","ojoDecider","reuse","reuseUpload","reuseGroup","getLocalStorage","default_group","reuseMain","reuseEnhanced","reuseReport","reuseCopyright","useState","uploadFileData","setUploadFileData","id","name","description","parent","folderList","setFolderList","scanFileData","setScanFileData","loading","setLoading","showMessage","setShowMessage","message","setMessage","handleChange","e","target","type","checked","files","value","useEffect","getAllFolders","then","res","title","className","setShow","text","onChange","options","property","htmlFor","rows","handleScanChange","Object","keys","find","parseInt","onClick","preventDefault","createUploadFile","window","scrollTo","top","messages","uploadSuccess","setTimeout","scheduleAnalysis","scheduledAnalysis","catch","error","handleError","finally","as","animation","size","role","randomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","getDate","day","Date","prototype","addDays","days","currentDate","this","valueOf","setDate","toISOString","split","getNameInitials","nameList","substring","toUpperCase","map","n","index","join","getReportIdFromUrl","url","matches","match","getFileNameFromContentDispostionHeader","header","contentDispostion","fileName","trim","getAllGroups","fetchAllGroups","endpoints","admin","groups","getAll","sendRequest","method","headers","Authorization","getToken","addGroupName","getAllGroupsApi","setLocalStorage","createGroup","create","createGroupApi","IgnoreScm","AccessLevel","OptionalAnalysis","Input","bucket","copyrightEmailAuthor","ecc","keyword","mime","monk","nomos","ojo","package","LicenseDecider","UploadReuse","groupList","uploadList","uploadName","reuseFolder","reuseData","setReuseData","prevData","getUploadsFolderId","valueProperty","noDataMessage","noGroup","noFolder","noUploads","CommonFields","scanData","jobs","body","copyright_email_author","nomos_monk","bulk_reused","new_scanner","ojo_decider","reuse_upload","reuse_group","reuse_main","reuse_enhanced","reuse_report","reuse_copyright","scheduleAnalysisApi","scheduleReport","reportFormat","scheduleReportApi","downloadReport","reportId","isFile","downloadReportApi","createUploadApi","upload","uploadCreate","formdata","FormData","append","isMultipart","uploadType","propTypes","PropTypes","number","string","bool","createUploadVcs","credentials","createUploadVcsApi","createUploadUrl","createUploadUrlApi","getUploadById","retries","getId","getUploadByIdApi"],"mappings":"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","file":"static/js/31.3a5a4058.chunk.js","sourcesContent":["/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport messages from \"constants/messages\";\n\n// Title\nimport Title from \"components/Title\";\n\n// Widgets\nimport { Alert, Button, InputContainer, Spinner } from \"components/Widgets\";\n\n// Common Fields for all the Uploads\nimport CommonFields from \"components/Upload/CommonFields\";\n\n// Required functions for calling APIs\nimport { createUploadFile } from \"services/upload\";\nimport { scheduleAnalysis } from \"services/jobs\";\nimport { getAllFolders } from \"services/folders\";\nimport { defaultAgentsList, getLocalStorage } from \"shared/storageHelper\";\n\n// Helper function for error handling\nimport { handleError } from \"shared/helper\";\n\nconst UploadFile = () => {\n  const initialState = {\n    folderId: 1,\n    uploadDescription: \"\",\n    accessLevel: \"protected\",\n    ignoreScm: false,\n    fileInput: null,\n  };\n  const initialScanFileData = {\n    analysis: defaultAgentsList(),\n    decider: {\n      nomosMonk: false,\n      bulkReused: false,\n      newScanner: false,\n      ojoDecider: false,\n    },\n    reuse: {\n      reuseUpload: 0,\n      reuseGroup: getLocalStorage(\"user\")?.default_group,\n      reuseMain: false,\n      reuseEnhanced: false,\n      reuseReport: false,\n      reuseCopyright: false,\n    },\n  };\n  const initialFolderList = [\n    {\n      id: 1,\n      name: \"Software Repository\",\n      description: \"Top Folder\",\n      parent: null,\n    },\n  ];\n\n  // Upload Id required for scheduling Analysis\n  let uploadId;\n\n  // Data required for creating the upload\n  const [uploadFileData, setUploadFileData] = useState(initialState);\n\n  // Setting the list for all the folders names\n  const [folderList, setFolderList] = useState(initialFolderList);\n\n  // Setting the data for scheduling analysis of an uploads\n  const [scanFileData, setScanFileData] = useState(initialScanFileData);\n\n  // State Variables for handling Error Boundaries\n  const [loading, setLoading] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [message, setMessage] = useState();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    createUploadFile(uploadFileData)\n      .then((res) => {\n        window.scrollTo({ top: 0 });\n        setMessage({\n          type: \"success\",\n          text: messages.uploadSuccess,\n        });\n        uploadId = res.message;\n      })\n      .then(() => {\n        setTimeout(\n          () =>\n            scheduleAnalysis(uploadFileData.folderId, uploadId, scanFileData)\n              .then(() => {\n                window.scrollTo({ top: 0 });\n                setMessage({\n                  type: \"success\",\n                  text: messages.scheduledAnalysis,\n                });\n                setUploadFileData(initialState);\n                setScanFileData(initialScanFileData);\n              })\n              .catch((error) => {\n                handleError(error, setMessage);\n              }),\n          1200\n        );\n      })\n      .catch((error) => {\n        handleError(error, setMessage);\n      })\n      .finally(() => {\n        setLoading(false);\n        setShowMessage(true);\n      });\n  };\n  const handleChange = (e) => {\n    if (e.target.type === \"checkbox\") {\n      setUploadFileData({\n        ...uploadFileData,\n        [e.target.name]: e.target.checked,\n      });\n    } else if (e.target.type === \"file\") {\n      setUploadFileData({\n        ...uploadFileData,\n        [e.target.name]: e.target.files[0],\n      });\n    } else {\n      setUploadFileData({\n        ...uploadFileData,\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n  const handleScanChange = (e) => {\n    const { name } = e.target;\n    if (\n      Object.keys(scanFileData.analysis).find((analysis) => analysis === name)\n    ) {\n      setScanFileData({\n        ...scanFileData,\n        analysis: {\n          ...scanFileData.analysis,\n          [e.target.name]: e.target.checked,\n        },\n      });\n    } else if (\n      Object.keys(scanFileData.decider).find((decider) => decider === name)\n    ) {\n      setScanFileData({\n        ...scanFileData,\n        decider: {\n          ...scanFileData.decider,\n          [e.target.name]: e.target.checked,\n        },\n      });\n    } else {\n      setScanFileData({\n        ...scanFileData,\n        reuse: {\n          ...scanFileData.reuse,\n          [e.target.name]:\n            e.target.type === \"checkbox\"\n              ? e.target.checked\n              : parseInt(e.target.value, 10) || e.target.value,\n        },\n      });\n    }\n  };\n  useEffect(() => {\n    getAllFolders().then((res) => {\n      setFolderList(res);\n    });\n  }, []);\n  return (\n    <>\n      <Title title=\"Upload a New File\" />\n      <div className=\"main-container my-3\">\n        {showMessage && (\n          <Alert\n            type={message.type}\n            setShow={setShowMessage}\n            message={message.text}\n          />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-md-12 col-sm-12 col-12\">\n            <h1 className=\"font-size-main-heading\">Upload a New file</h1>\n            <br />\n            <p className=\"font-demi\">\n              To manage your own group permissions go into Admin &gt; Groups\n              &gt; Manage Group Users. To manage permissions for this one\n              upload, go to Admin &gt; Upload Permissions.\n            </p>\n            <p>\n              This option permits uploading a single file (which may be iso,\n              tar, rpm, jar, zip, bz2, msi, cab, etc.) from your computer to\n              FOSSology. Your FOSSology server has imposed a maximum upload file\n              size of 700Mbytes.\n            </p>\n            <form className=\"my-3\">\n              <InputContainer\n                type=\"select\"\n                name=\"folderId\"\n                id=\"upload-folder-id\"\n                onChange={(e) => handleChange(e)}\n                options={folderList}\n                property=\"name\"\n                value={folderList?.id}\n              >\n                Select the folder for storing the uploaded files:\n              </InputContainer>\n              <InputContainer\n                type=\"file\"\n                name=\"fileInput\"\n                id=\"upload-file-input\"\n                onChange={(e) => handleChange(e)}\n              >\n                Select file to upload:\n              </InputContainer>\n              <div className=\"my-2\">\n                <label htmlFor=\"upload\" className=\"font-demi w-100\">\n                  (Optional) Enter a description of this file:\n                  <textarea\n                    name=\"uploadDescription\"\n                    className=\"form-control font-regular mt-2\"\n                    value={uploadFileData.uploadDescription}\n                    id=\"upload-file-description\"\n                    rows=\"3\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                </label>\n              </div>\n              <CommonFields\n                accessLevel={uploadFileData.accessLevel}\n                ignoreScm={uploadFileData.ignoreScm}\n                analysis={scanFileData.analysis}\n                decider={scanFileData.decider}\n                reuse={scanFileData.reuse}\n                handleChange={handleChange}\n                handleScanChange={handleScanChange}\n              />\n              <Button type=\"submit\" onClick={handleSubmit} className=\"mt-4\">\n                {loading ? (\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                ) : (\n                  \"Upload\"\n                )}\n              </Button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UploadFile;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\n// Random string generator\nexport const randomString = (length) => {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\n// Get date in YYYY-MM-DD format\nexport const getDate = (day) => {\n  // eslint-disable-next-line no-extend-native, func-names\n  Date.prototype.addDays = function (days) {\n    const currentDate = new Date(this.valueOf());\n    currentDate.setDate(currentDate.getDate() + days);\n    return currentDate;\n  };\n  const date = new Date();\n  return date.addDays(day).toISOString().split(\"T\")[0];\n};\n\n// Returns the initials of given name\nexport const getNameInitials = (name) => {\n  if (!name) {\n    return name;\n  }\n  // Convert name into array of words\n  const nameList = name.split(\" \");\n  // For single word name return first 2 characters\n  if (nameList.length === 1) {\n    return nameList[0].substring(0, 2).toUpperCase();\n  }\n  // Return the first 3 characters of the initials\n  return nameList\n    .map((n, index) => {\n      if (index < 3) {\n        return n[0];\n      }\n      return null;\n    })\n    .join(\"\")\n    .toUpperCase();\n};\n\n// Common handle error component\nexport const handleError = (error, setMessage) => {\n  window.scrollTo({ top: 0 });\n  setMessage({\n    type: \"danger\",\n    text: error.message,\n  });\n};\n\n// Extract report id from url\nexport const getReportIdFromUrl = (url) => {\n  const matches = url.match(/report\\/([0-9]+)/);\n  if (matches != null) {\n    return matches[1];\n  }\n  return null;\n};\n\nexport const getFileNameFromContentDispostionHeader = (header) => {\n  const contentDispostion = header.split(\";\");\n  let fileName = \"download.txt\";\n  // eslint-disable-next-line no-restricted-syntax\n  for (const headerElement of contentDispostion) {\n    const matches = headerElement.trim().match(/filename=\"(.*)\"/);\n    if (matches != null) {\n      fileName = matches[1];\n      break;\n    }\n  }\n\n  return fileName;\n};\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport { getAllGroupsApi, createGroupApi } from \"api/groups\";\nimport { setLocalStorage, getLocalStorage } from \"shared/storageHelper\";\n\n// Fetching all the groups\nexport const getAllGroups = () => {\n  return getLocalStorage(\"groups\");\n};\n\nexport const fetchAllGroups = () => {\n  return getAllGroupsApi().then((res) => {\n    setLocalStorage(\"groups\", res);\n    return res;\n  });\n};\n\n// Creating a group\nexport const createGroup = (name) => {\n  return createGroupApi(name).then((res) => {\n    return res;\n  });\n};\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Fetching all the groups\nexport const getAllGroupsApi = () => {\n  const url = endpoints.admin.groups.getAll();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    addGroupName: false,\n  });\n};\n\n// Creating a group\nexport const createGroupApi = (name) => {\n  const url = endpoints.admin.groups.create();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      Authorization: getToken(),\n      name,\n    },\n    addGroupName: false,\n  });\n};\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction IgnoreScm({ ignoreScm, handleChange }) {\n  return (\n    <div id=\"upload-ignore-files\" className=\"mt-4\">\n      <InputContainer\n        type=\"checkbox\"\n        checked={ignoreScm}\n        name=\"ignoreScm\"\n        id=\"upload-ignore-scm\"\n        onChange={(e) => handleChange(e)}\n      >\n        Ignore SCM files (Git, SVN, TFS) and files with particular\n        Mimetype&nbsp;\n        <Tooltip title=\"Configure mimetypes from Admin-Customize-Skip MimeTypes from scanning\" />\n      </InputContainer>\n    </div>\n  );\n}\n\nIgnoreScm.propTypes = {\n  ignoreScm: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default IgnoreScm;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction AccessLevel({ accessLevel, handleChange }) {\n  return (\n    <div id=\"upload-access-level\" className=\"mt-4\">\n      <InputContainer\n        type=\"radio\"\n        value=\"private\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-private\"\n        checked={accessLevel === \"private\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Visible only for active group&nbsp;\n        <Tooltip title=\"which is the currently selected group\" />\n      </InputContainer>\n      <InputContainer\n        type=\"radio\"\n        value=\"protected\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-protected\"\n        checked={accessLevel === \"protected\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Visible for all groups&nbsp;\n        <Tooltip title=\"which are accessible by you now\" />\n      </InputContainer>\n      <InputContainer\n        type=\"radio\"\n        value=\"public\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-public\"\n        checked={accessLevel === \"public\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Make Public&nbsp;\n        <Tooltip title=\"visible for all users\" />\n      </InputContainer>\n    </div>\n  );\n}\n\nAccessLevel.propTypes = {\n  accessLevel: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default AccessLevel;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport InputContainer from \"components/Widgets/Input\";\n\nfunction OptionalAnalysis({ analysis, handleChange }) {\n  return (\n    <div id=\"uplod-optional-analysis\" className=\"mt-4\">\n      <p className=\"font-demi\">Select optional analysis</p>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.bucket}\n        name=\"bucket\"\n        id=\"upload-analysis-bucket\"\n        onChange={(e) => handleChange(e)}\n      >\n        Bucket Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.copyrightEmailAuthor}\n        name=\"copyrightEmailAuthor\"\n        id=\"upload-analysis-copyright-email-author\"\n        onChange={(e) => handleChange(e)}\n      >\n        Copyright/Email/URL/Author Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.ecc}\n        name=\"ecc\"\n        id=\"upload-analysis-ecc\"\n        onChange={(e) => handleChange(e)}\n      >\n        ECC Analysis, scanning for text fragments potentially relevant for\n        export control\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.keyword}\n        name=\"keyword\"\n        id=\"upload-analysis-keyword\"\n        onChange={(e) => handleChange(e)}\n      >\n        Keyword Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.mime}\n        name=\"mime\"\n        id=\"upload-analysis-mime\"\n        onChange={(e) => handleChange(e)}\n      >\n        MIME-type Analysis (Determine mimetype of every file. Not needed for\n        licenses or buckets)\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.monk}\n        name=\"monk\"\n        id=\"upload-analysis-monk\"\n        onChange={(e) => handleChange(e)}\n      >\n        Monk License Analysis, scanning for licenses performing a text\n        comparison\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.nomos}\n        name=\"nomos\"\n        id=\"upload-analysis-nomos\"\n        onChange={(e) => handleChange(e)}\n      >\n        Nomos License Analysis, scanning for licenses using regular expressions\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.ojo}\n        name=\"ojo\"\n        id=\"upload-analysis-ojo\"\n        onChange={(e) => handleChange(e)}\n      >\n        Ojo License Analysis, scanning for licenses using\n        SPDX-License-Identifier\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.package}\n        name=\"package\"\n        id=\"upload-analysis-package\"\n        onChange={(e) => handleChange(e)}\n      >\n        Package Analysis (Parse package headers)\n      </InputContainer>\n    </div>\n  );\n}\n\nOptionalAnalysis.propTypes = {\n  analysis: PropTypes.shape({\n    bucket: PropTypes.bool.isRequired,\n    copyrightEmailAuthor: PropTypes.bool.isRequired,\n    ecc: PropTypes.bool.isRequired,\n    keyword: PropTypes.bool.isRequired,\n    mime: PropTypes.bool.isRequired,\n    monk: PropTypes.bool.isRequired,\n    nomos: PropTypes.bool.isRequired,\n    ojo: PropTypes.bool.isRequired,\n    package: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default OptionalAnalysis;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction LicenseDecider({ decider, handleChange }) {\n  return (\n    <div id=\"upload-concluded-license-decider\" className=\"mt-4\">\n      <p className=\"font-demi\">\n        Automatic Concluded License Decider,\n        <Tooltip title=\"only for relevant files\" /> based on\n      </p>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.nomosMonk}\n        name=\"nomosMonk\"\n        id=\"upload-decider-nomos-monk\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... scanners matches if all Nomos findings are within the Monk findings\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.ojoDecider}\n        name=\"ojoDecider\"\n        id=\"upload-decider-ojo-decider\"\n        onChange={(e) => handleChange(e)}\n      >\n        .. scanners matches if Ojo findings are no contradiction with other\n        findings\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.bulkReused}\n        name=\"bulkReused\"\n        id=\"upload-decider-bulk-reused\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... bulk phrases from reused packages\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.newScanner}\n        name=\"newScanner\"\n        id=\"upload-decider-new-scanner\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... new scanner results, i.e., decisions were marked as work in progress\n        if new scanner finds additional licenses\n      </InputContainer>\n    </div>\n  );\n}\n\nLicenseDecider.propTypes = {\n  decider: PropTypes.shape({\n    nomosMonk: PropTypes.bool.isRequired,\n    bulkReused: PropTypes.bool.isRequired,\n    newScanner: PropTypes.bool.isRequired,\n    ojoDecider: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default LicenseDecider;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\n// Required services for calling APIs\nimport { getAllFolders } from \"services/folders\";\nimport { getUploadsFolderId } from \"services/organizeUploads\";\nimport { getAllGroups } from \"services/groups\";\n\nimport messages from \"constants/messages\";\n\nconst UploadReuse = ({ reuse, handleChange }) => {\n  const initialGroupList = [{ id: 3, name: \"fossy\" }];\n  const initialFolderList = [\n    {\n      id: 1,\n      name: \"Software Repository\",\n      description: \"Top Folder\",\n      parent: null,\n    },\n  ];\n  const initialUploadList = [\n    {\n      folderId: 1,\n      uploadId: null,\n      uploadName: \"\",\n      uploadDescription: \"\",\n    },\n  ];\n  const [reuseData, setReuseData] = useState({\n    groupList: initialGroupList,\n    folderList: initialFolderList,\n    uploadList: initialUploadList,\n    reuseFolder: 1,\n  });\n\n  useEffect(() => {\n    setReuseData((prevData) => ({ ...prevData, groupList: getAllGroups() }));\n  }, []);\n\n  useEffect(() => {\n    getAllFolders(reuse.reuseGroup)\n      .then((res) => {\n        setReuseData((prevData) => ({ ...prevData, folderList: res }));\n      })\n      .catch(() => {});\n  }, [reuse.reuseGroup]);\n\n  useEffect(() => {\n    getUploadsFolderId(reuseData.reuseFolder, reuse.reuseGroup)\n      .then((res) => {\n        setReuseData((prevData) => ({ ...prevData, uploadList: res }));\n      })\n      .catch(() => {});\n  }, [reuse.reuseGroup, reuseData.reuseFolder]);\n\n  const handleReuseDataChange = (e) => {\n    setReuseData((prevData) => ({\n      ...prevData,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  return (\n    <div id=\"upload-reuse\" className=\"mt-4\">\n      <p className=\"font-demi\">\n        (Optional) Reuse\n        <Tooltip title=\"copy clearing decisions if there is the same file hash between two files\" />\n      </p>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseGroup\"\n        id=\"upload-file-reuse-group\"\n        onChange={handleChange}\n        options={reuseData.groupList}\n        value={reuse.reuseGroup}\n        property=\"name\"\n        valueProperty=\"name\"\n        noDataMessage={messages.noGroup}\n      >\n        Select the reuse group:\n      </InputContainer>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseFolder\"\n        id=\"upload-file-reuse-folder\"\n        onChange={handleReuseDataChange}\n        options={reuseData.folderList}\n        value={reuseData.reuseFolder}\n        property=\"name\"\n        noDataMessage={messages.noFolder}\n      >\n        Select the reuse folder:\n      </InputContainer>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseUpload\"\n        id=\"upload-file-reuse-upload\"\n        onChange={handleChange}\n        options={reuseData.uploadList}\n        value={parseInt(reuse.reuseUpload, 10)}\n        property=\"uploadname\"\n        valueProperty=\"id\"\n        noDataMessage={messages.noUploads}\n      >\n        Select the reuse upload:\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseEnhanced}\n        name=\"reuseEnhanced\"\n        id=\"upload-file-reuse-enhanced\"\n        onChange={handleChange}\n      >\n        Enhanced reuse (slower)\n        <Tooltip title=\"will copy a clearing decision if the two files differ by one line determined by a diff tool\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseMain}\n        name=\"reuseMain\"\n        id=\"upload-file-reuse-main\"\n        onChange={handleChange}\n      >\n        Reuse main license/s\n        <Tooltip title=\"will copy a main license decision if any\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseReport}\n        name=\"reuseReport\"\n        id=\"upload-file-reuse-report\"\n        onChange={handleChange}\n      >\n        Reuse report configuration settings\n        <Tooltip title=\"use to copy all the information from conf page(if any)\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseCopyright}\n        name=\"reuseCopyright\"\n        id=\"upload-file-reuse-copyright\"\n        onChange={handleChange}\n      >\n        Reuse edited and deactivated copyrights\n        <Tooltip title=\"use to copy edited and deactivated copyrights from the reused package\" />\n      </InputContainer>\n    </div>\n  );\n};\n\nUploadReuse.propTypes = {\n  reuse: PropTypes.shape({\n    reuseUpload: PropTypes.number.isRequired,\n    reuseGroup: PropTypes.string.isRequired,\n    reuseMain: PropTypes.bool.isRequired,\n    reuseEnhanced: PropTypes.bool.isRequired,\n    reuseReport: PropTypes.bool.isRequired,\n    reuseCopyright: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default UploadReuse;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IgnoreScm from \"./IgnoreScm\";\nimport AccessLevel from \"./AccessLevel\";\nimport OptionalAnalysis from \"./OptionalAnalysis\";\nimport LicenseDecider from \"./LicenseDecider\";\nimport UploadReuse from \"./UploadReuse\";\n\nfunction CommonFields({\n  accessLevel,\n  ignoreScm,\n  analysis,\n  decider,\n  reuse,\n  handleChange,\n  handleScanChange,\n}) {\n  return (\n    <>\n      {ignoreScm && (\n        <IgnoreScm ignoreScm={ignoreScm} handleChange={handleChange} />\n      )}\n      {accessLevel && (\n        <AccessLevel accessLevel={accessLevel} handleChange={handleChange} />\n      )}\n      {analysis && (\n        <OptionalAnalysis analysis={analysis} handleChange={handleScanChange} />\n      )}\n      {decider && (\n        <LicenseDecider decider={decider} handleChange={handleScanChange} />\n      )}\n      {reuse && <UploadReuse reuse={reuse} handleChange={handleScanChange} />}\n    </>\n  );\n}\n\nCommonFields.propTypes = {\n  accessLevel: PropTypes.string,\n  ignoreScm: PropTypes.bool,\n  analysis: PropTypes.shape({\n    bucket: PropTypes.bool.isRequired,\n    copyrightEmailAuthor: PropTypes.bool.isRequired,\n    ecc: PropTypes.bool.isRequired,\n    keyword: PropTypes.bool.isRequired,\n    mime: PropTypes.bool.isRequired,\n    monk: PropTypes.bool.isRequired,\n    nomos: PropTypes.bool.isRequired,\n    ojo: PropTypes.bool.isRequired,\n    package: PropTypes.bool.isRequired,\n  }).isRequired,\n  decider: PropTypes.shape({\n    nomosMonk: PropTypes.bool.isRequired,\n    bulkReused: PropTypes.bool.isRequired,\n    newScanner: PropTypes.bool.isRequired,\n    ojoDecider: PropTypes.bool.isRequired,\n  }).isRequired,\n  reuse: PropTypes.shape({\n    reuseUpload: PropTypes.number.isRequired,\n    reuseGroup: PropTypes.string.isRequired,\n    reuseMain: PropTypes.bool.isRequired,\n    reuseEnhanced: PropTypes.bool.isRequired,\n    reuseReport: PropTypes.bool.isRequired,\n    reuseCopyright: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleScanChange: PropTypes.func.isRequired,\n};\n\nexport default CommonFields;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport {\n  getJobApi,\n  scheduleAnalysisApi,\n  scheduleReportApi,\n  downloadReportApi,\n} from \"api/jobs\";\nimport { getReportIdFromUrl } from \"shared/helper\";\n\n// Fetching the jobs\nexport const getJob = (jobId) => {\n  return getJobApi(jobId).then((res) => {\n    return res.entity.map((jsonObject) => {\n      const tag = {};\n      tag.stats = { score: jsonObject.score };\n      return tag;\n    });\n  });\n};\n\n// Scheduling the analysis for the uploads\nexport const scheduleAnalysis = (folderId, uploadId, scanData) => {\n  return scheduleAnalysisApi(folderId, uploadId, scanData).then((res) => {\n    return res;\n  });\n};\n\nexport const scheduleReport = (uploadId, reportFormat) => {\n  return scheduleReportApi(uploadId, reportFormat).then((res) => {\n    return res;\n  });\n};\n\nexport const downloadReport = (url) => {\n  const reportId = getReportIdFromUrl(url);\n  if (reportId === null) {\n    return null;\n  }\n  return downloadReportApi(reportId).then((res) => {\n    return res;\n  });\n};\n\nexport default getJob;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Fetching the jobs\nexport const getJobApi = ({ jobId }) => {\n  const url = endpoints.jobs.details(jobId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n  });\n};\n\n// Scheduling the analysis for the uploads\nexport const scheduleAnalysisApi = (folderId, uploadId, scanData) => {\n  const url = endpoints.jobs.scheduleAnalysis();\n  const { bucket, copyrightEmailAuthor, ecc, keyword, mime, monk, nomos, ojo } =\n    scanData?.analysis;\n  const { nomosMonk, bulkReused, newScanner, ojoDecider } = scanData?.decider;\n  const {\n    reuseUpload,\n    reuseGroup,\n    reuseMain,\n    reuseEnhanced,\n    reuseReport,\n    reuseCopyright,\n  } = scanData?.reuse;\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      Authorization: getToken(),\n      folderId,\n      uploadId,\n    },\n    body: {\n      analysis: {\n        bucket,\n        copyright_email_author: copyrightEmailAuthor,\n        ecc,\n        keyword,\n        mime,\n        monk,\n        nomos,\n        ojo,\n        package: scanData.analysis.package,\n      },\n      decider: {\n        nomos_monk: nomosMonk,\n        bulk_reused: bulkReused,\n        new_scanner: newScanner,\n        ojo_decider: ojoDecider,\n      },\n      reuse: {\n        reuse_upload: reuseUpload,\n        reuse_group: reuseGroup,\n        reuse_main: reuseMain,\n        reuse_enhanced: reuseEnhanced,\n        reuse_report: reuseReport,\n        reuse_copyright: reuseCopyright,\n      },\n    },\n  });\n};\n\nexport const scheduleReportApi = (uploadId, reportFormat) => {\n  const url = endpoints.jobs.scheduleReport();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n      uploadId,\n      reportFormat,\n    },\n  });\n};\n\nexport const downloadReportApi = (reportId) => {\n  const url = endpoints.jobs.downloadReport(reportId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    isFile: true,\n  });\n};\n\nexport default getJobApi;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport PropTypes from \"prop-types\";\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Create Uploads from File\nexport const createUploadApi = (\n  folderId,\n  uploadDescription,\n  accessLevel,\n  ignoreScm,\n  fileInput\n) => {\n  const url = endpoints.upload.uploadCreate();\n  const formdata = new FormData();\n  if (fileInput) {\n    formdata.append(\"fileInput\", fileInput, fileInput?.name);\n  }\n  return sendRequest({\n    url,\n    method: \"POST\",\n    isMultipart: true,\n    headers: {\n      Authorization: getToken(),\n      folderId,\n      uploadDescription,\n      accessLevel,\n      ignoreScm,\n      uploadType: \"\",\n    },\n    body: formdata,\n  });\n};\n\n// Create Uploads from Version Control System\nexport const createUploadVcsApi = (header, body) => {\n  const url = endpoints.upload.uploadCreate();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    credentials: false,\n    headers: {\n      ...header,\n      Authorization: getToken(),\n    },\n    body,\n  });\n};\n\n// Create Uploads from URL\nexport const createUploadUrlApi = (header, body) => {\n  const url = endpoints.upload.uploadCreate();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      ...header,\n      Authorization: getToken(),\n    },\n    body,\n  });\n};\n\n// Getting a Upload by id\nexport const getUploadByIdApi = (uploadId, retries) => {\n  const url = endpoints.upload.getId(uploadId);\n  return sendRequest({\n    url,\n    method: \"GET\",\n    retries,\n    headers: {\n      Authorization: getToken(),\n    },\n  });\n};\n\ncreateUploadApi.propTypes = {\n  folderId: PropTypes.number,\n  uploadDescription: PropTypes.string,\n  accessLevel: PropTypes.string,\n  ignoreScm: PropTypes.bool,\n  fileInput: PropTypes.string,\n};\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport {\n  createUploadApi,\n  getUploadByIdApi,\n  createUploadVcsApi,\n  createUploadUrlApi,\n} from \"api/upload\";\n\n// Create Uploads from File\nexport const createUploadFile = ({\n  folderId,\n  uploadDescription,\n  accessLevel,\n  ignoreScm,\n  fileInput,\n}) => {\n  return createUploadApi(\n    folderId,\n    uploadDescription,\n    accessLevel,\n    ignoreScm,\n    fileInput\n  ).then((res) => {\n    return res;\n  });\n};\n\n// Create Uploads from Version Control System\nexport const createUploadVcs = (header, body) => {\n  return createUploadVcsApi(header, body).then((res) => {\n    return res;\n  });\n};\n\n// Create Uploads from URL\nexport const createUploadUrl = (header, body) => {\n  return createUploadUrlApi(header, body).then((res) => {\n    return res;\n  });\n};\n\n// Getting a Upload by id\nexport const getUploadById = (uploadId, retries) => {\n  return getUploadByIdApi(uploadId, retries).then((res) => {\n    return res;\n  });\n};\n"],"sourceRoot":""}