{"version":3,"sources":["pages/Upload/Server/index.jsx","services/groups.js","api/groups.js","components/Upload/CommonFields/IgnoreScm/index.jsx","components/Upload/CommonFields/AccessLevel/index.jsx","components/Upload/CommonFields/OptionalAnalysis/index.jsx","components/Upload/CommonFields/LicenseDecider/index.jsx","components/Upload/CommonFields/UploadReuse/index.jsx","components/Upload/CommonFields/index.jsx"],"names":["UploadFromServer","initialScanFileData","analysis","defaultAgentsList","decider","nomosMonk","bulkReused","newScanner","ojoDecider","reuse","reuseUpload","reuseGroup","getLocalStorage","default_group","reuseMain","reuseEnhanced","reuseReport","reuseCopyright","useState","folderId","uploadDescription","accessLevel","ignoreScm","uploadType","groupName","uploadServerData","setUploadServerData","id","name","description","parent","folderList","setFolderList","scanFileData","setScanFileData","message","setMessage","showMessage","setShowMessage","handleChange","e","target","type","checked","files","value","useEffect","getAllFolders","then","res","catch","error","window","scrollTo","top","text","title","className","setShow","onChange","options","property","htmlFor","rows","handleScanChange","Object","keys","find","parseInt","onClick","preventDefault","getAllGroups","fetchAllGroups","url","endpoints","admin","groups","getAll","sendRequest","method","headers","Authorization","getToken","addGroupName","getAllGroupsApi","setLocalStorage","createGroup","create","createGroupApi","IgnoreScm","AccessLevel","OptionalAnalysis","Input","bucket","copyrightEmailAuthor","ecc","keyword","mime","monk","nomos","ojo","package","LicenseDecider","UploadReuse","groupList","uploadList","uploadId","uploadName","reuseFolder","reuseData","setReuseData","prevData","getUploadsFolderId","valueProperty","noDataMessage","messages","noGroup","noFolder","noUploads","CommonFields"],"mappings":"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","file":"static/js/42.cdc42108.chunk.js","sourcesContent":["/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\n\n// Widgets\nimport { Alert, Button, InputContainer } from \"components/Widgets\";\n\n// Common Fields for all the Uploads\nimport CommonFields from \"components/Upload/CommonFields\";\n\n// Required functions for calling APIs\nimport { getAllFolders } from \"services/folders\";\nimport { defaultAgentsList, getLocalStorage } from \"shared/storageHelper\";\n\n// Title\nimport Title from \"components/Title\";\n\nconst UploadFromServer = () => {\n  const initialState = {\n    folderId: 1,\n    uploadDescription: \"\",\n    accessLevel: \"protected\",\n    ignoreScm: false,\n    uploadType: \"server\",\n    groupName: \"\",\n  };\n  const initialScanFileData = {\n    analysis: defaultAgentsList(),\n    decider: {\n      nomosMonk: false,\n      bulkReused: false,\n      newScanner: false,\n      ojoDecider: false,\n    },\n    reuse: {\n      reuseUpload: 0,\n      reuseGroup: getLocalStorage(\"user\")?.default_group,\n      reuseMain: false,\n      reuseEnhanced: false,\n      reuseReport: false,\n      reuseCopyright: false,\n    },\n  };\n  const initialFolderList = [\n    {\n      id: 1,\n      name: \"Software Repository\",\n      description: \"Top Folder\",\n      parent: null,\n    },\n  ];\n\n  // Data required for creating the upload\n  const [uploadServerData, setUploadServerData] = useState(initialState);\n\n  // Setting the list for all the folders names\n  const [folderList, setFolderList] = useState(initialFolderList);\n\n  // Setting the data for scheduling analysis of an uploads\n  const [scanFileData, setScanFileData] = useState(initialScanFileData);\n\n  // State Variables for handling Error Boundaries\n  const [message, setMessage] = useState();\n  const [showMessage, setShowMessage] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n  const handleChange = (e) => {\n    if (e.target.type === \"checkbox\") {\n      setUploadServerData({\n        ...uploadServerData,\n        [e.target.name]: e.target.checked,\n      });\n    } else if (e.target.type === \"file\") {\n      setUploadServerData({\n        ...uploadServerData,\n        [e.target.name]: e.target.files[0],\n      });\n    } else {\n      setUploadServerData({\n        ...uploadServerData,\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n  const handleScanChange = (e) => {\n    const { name } = e.target;\n    if (\n      Object.keys(scanFileData.analysis).find((analysis) => analysis === name)\n    ) {\n      setScanFileData({\n        ...scanFileData,\n        analysis: {\n          ...scanFileData.analysis,\n          [e.target.name]: e.target.checked,\n        },\n      });\n    } else if (\n      Object.keys(scanFileData.decider).find((decider) => decider === name)\n    ) {\n      setScanFileData({\n        ...scanFileData,\n        decider: {\n          ...scanFileData.decider,\n          [e.target.name]: e.target.checked,\n        },\n      });\n    } else {\n      setScanFileData({\n        ...scanFileData,\n        reuse: {\n          ...scanFileData.reuse,\n          [e.target.name]:\n            e.target.type === \"checkbox\"\n              ? e.target.checked\n              : parseInt(e.target.value, 10) || e.target.value,\n        },\n      });\n    }\n  };\n  useEffect(() => {\n    getAllFolders()\n      .then((res) => {\n        setFolderList(res);\n      })\n      .catch((error) => {\n        window.scrollTo({ top: 0 });\n        setMessage({\n          type: \"danger\",\n          text: error.message,\n        });\n        setShowMessage(true);\n      });\n  }, []);\n  return (\n    <>\n      <Title title=\"Upload from Server\" />\n      <div className=\"main-container my-3\">\n        {showMessage && (\n          <Alert\n            type={message.type}\n            message={message.text}\n            setShow={setShowMessage}\n          />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-md-12 col-sm-12 col-12\">\n            <h1 className=\"font-size-main-heading\">Upload from Server</h1>\n            <br />\n            <p className=\"font-demi\">\n              To manage your own group permissions go into Admin &gt; Groups\n              &gt; Manage Group Users. To manage permissions for this one\n              upload, go to Admin &gt; Upload Permissions.\n            </p>\n            <p>This option permits uploading a files from the server.</p>\n            <form className=\"my-3\">\n              <InputContainer\n                type=\"select\"\n                name=\"\"\n                id=\"upload-server-folder-id\"\n                onChange={(e) => handleChange(e)}\n                options={folderList}\n                property=\"name\"\n                value=\"\"\n              >\n                Select the folder for storing the uploaded files:\n              </InputContainer>\n              <InputContainer\n                type=\"text\"\n                name=\"\"\n                id=\"upload-server-file-path\"\n                onChange={(e) => handleChange(e)}\n                value=\"\"\n              >\n                Enter the file path:\n              </InputContainer>\n              <div className=\"mt-n2 mb-3\">\n                NOTE: Contents under a directory will be recursively included.\n                '*' is supported to select multiple files (e.g. *.txt).\n              </div>\n              <InputContainer\n                type=\"text\"\n                name=\"\"\n                id=\"upload-server-viewable-name\"\n                onChange={(e) => handleChange(e)}\n                value=\"\"\n              >\n                (Optional) Enter a viewable name for this file or directory:\n              </InputContainer>\n              <div className=\"mt-n2\">\n                Note: If no name is provided, then the uploaded file (directory)\n                name will be used.\n              </div>\n              <div className=\"my-3\">\n                <label\n                  htmlFor=\"upload-server-description\"\n                  className=\"font-demi w-100\"\n                >\n                  (Optional) Enter a description of this file:\n                  <textarea\n                    name=\"description\"\n                    className=\"form-control font-regular mt-2\"\n                    value=\"\"\n                    id=\"upload-server-description\"\n                    rows=\"3\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                </label>\n              </div>\n              <CommonFields\n                accessLevel={uploadServerData.accessLevel}\n                ignoreScm={uploadServerData.ignoreScm}\n                analysis={scanFileData.analysis}\n                decider={scanFileData.decider}\n                reuse={scanFileData.reuse}\n                handleChange={handleChange}\n                handleScanChange={handleScanChange}\n              />\n              <Button type=\"submit\" onClick={handleSubmit} className=\"mt-4\">\n                Upload\n              </Button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default UploadFromServer;\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport { getAllGroupsApi, createGroupApi } from \"api/groups\";\nimport { setLocalStorage, getLocalStorage } from \"shared/storageHelper\";\n\n// Fetching all the groups\nexport const getAllGroups = () => {\n  return getLocalStorage(\"groups\");\n};\n\nexport const fetchAllGroups = () => {\n  return getAllGroupsApi().then((res) => {\n    setLocalStorage(\"groups\", res);\n    return res;\n  });\n};\n\n// Creating a group\nexport const createGroup = (name) => {\n  return createGroupApi(name).then((res) => {\n    return res;\n  });\n};\n","/*\n Copyright (C) 2021 Aman Dwivedi (aman.dwivedi5@gmail.com), Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport endpoints from \"constants/endpoints\";\n\n// Getting Authorization Token\nimport { getToken } from \"shared/authHelper\";\n\n// Function for calling the fetch function for the APIs\nimport sendRequest from \"./sendRequest\";\n\n// Fetching all the groups\nexport const getAllGroupsApi = () => {\n  const url = endpoints.admin.groups.getAll();\n  return sendRequest({\n    url,\n    method: \"GET\",\n    headers: {\n      Authorization: getToken(),\n    },\n    addGroupName: false,\n  });\n};\n\n// Creating a group\nexport const createGroupApi = (name) => {\n  const url = endpoints.admin.groups.create();\n  return sendRequest({\n    url,\n    method: \"POST\",\n    headers: {\n      Authorization: getToken(),\n      name,\n    },\n    addGroupName: false,\n  });\n};\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction IgnoreScm({ ignoreScm, handleChange }) {\n  return (\n    <div id=\"upload-ignore-files\" className=\"mt-4\">\n      <InputContainer\n        type=\"checkbox\"\n        checked={ignoreScm}\n        name=\"ignoreScm\"\n        id=\"upload-ignore-scm\"\n        onChange={(e) => handleChange(e)}\n      >\n        Ignore SCM files (Git, SVN, TFS) and files with particular\n        Mimetype&nbsp;\n        <Tooltip title=\"Configure mimetypes from Admin-Customize-Skip MimeTypes from scanning\" />\n      </InputContainer>\n    </div>\n  );\n}\n\nIgnoreScm.propTypes = {\n  ignoreScm: PropTypes.bool.isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default IgnoreScm;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction AccessLevel({ accessLevel, handleChange }) {\n  return (\n    <div id=\"upload-access-level\" className=\"mt-4\">\n      <InputContainer\n        type=\"radio\"\n        value=\"private\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-private\"\n        checked={accessLevel === \"private\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Visible only for active group&nbsp;\n        <Tooltip title=\"which is the currently selected group\" />\n      </InputContainer>\n      <InputContainer\n        type=\"radio\"\n        value=\"protected\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-protected\"\n        checked={accessLevel === \"protected\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Visible for all groups&nbsp;\n        <Tooltip title=\"which are accessible by you now\" />\n      </InputContainer>\n      <InputContainer\n        type=\"radio\"\n        value=\"public\"\n        name=\"accessLevel\"\n        id=\"upload-access-level-public\"\n        checked={accessLevel === \"public\"}\n        onChange={(e) => handleChange(e)}\n      >\n        Make Public&nbsp;\n        <Tooltip title=\"visible for all users\" />\n      </InputContainer>\n    </div>\n  );\n}\n\nAccessLevel.propTypes = {\n  accessLevel: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default AccessLevel;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport InputContainer from \"components/Widgets/Input\";\n\nfunction OptionalAnalysis({ analysis, handleChange }) {\n  return (\n    <div id=\"uplod-optional-analysis\" className=\"mt-4\">\n      <p className=\"font-demi\">Select optional analysis</p>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.bucket}\n        name=\"bucket\"\n        id=\"upload-analysis-bucket\"\n        onChange={(e) => handleChange(e)}\n      >\n        Bucket Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.copyrightEmailAuthor}\n        name=\"copyrightEmailAuthor\"\n        id=\"upload-analysis-copyright-email-author\"\n        onChange={(e) => handleChange(e)}\n      >\n        Copyright/Email/URL/Author Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.ecc}\n        name=\"ecc\"\n        id=\"upload-analysis-ecc\"\n        onChange={(e) => handleChange(e)}\n      >\n        ECC Analysis, scanning for text fragments potentially relevant for\n        export control\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.keyword}\n        name=\"keyword\"\n        id=\"upload-analysis-keyword\"\n        onChange={(e) => handleChange(e)}\n      >\n        Keyword Analysis\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.mime}\n        name=\"mime\"\n        id=\"upload-analysis-mime\"\n        onChange={(e) => handleChange(e)}\n      >\n        MIME-type Analysis (Determine mimetype of every file. Not needed for\n        licenses or buckets)\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.monk}\n        name=\"monk\"\n        id=\"upload-analysis-monk\"\n        onChange={(e) => handleChange(e)}\n      >\n        Monk License Analysis, scanning for licenses performing a text\n        comparison\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.nomos}\n        name=\"nomos\"\n        id=\"upload-analysis-nomos\"\n        onChange={(e) => handleChange(e)}\n      >\n        Nomos License Analysis, scanning for licenses using regular expressions\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.ojo}\n        name=\"ojo\"\n        id=\"upload-analysis-ojo\"\n        onChange={(e) => handleChange(e)}\n      >\n        Ojo License Analysis, scanning for licenses using\n        SPDX-License-Identifier\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={analysis.package}\n        name=\"package\"\n        id=\"upload-analysis-package\"\n        onChange={(e) => handleChange(e)}\n      >\n        Package Analysis (Parse package headers)\n      </InputContainer>\n    </div>\n  );\n}\n\nOptionalAnalysis.propTypes = {\n  analysis: PropTypes.shape({\n    bucket: PropTypes.bool.isRequired,\n    copyrightEmailAuthor: PropTypes.bool.isRequired,\n    ecc: PropTypes.bool.isRequired,\n    keyword: PropTypes.bool.isRequired,\n    mime: PropTypes.bool.isRequired,\n    monk: PropTypes.bool.isRequired,\n    nomos: PropTypes.bool.isRequired,\n    ojo: PropTypes.bool.isRequired,\n    package: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default OptionalAnalysis;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\nfunction LicenseDecider({ decider, handleChange }) {\n  return (\n    <div id=\"upload-concluded-license-decider\" className=\"mt-4\">\n      <p className=\"font-demi\">\n        Automatic Concluded License Decider,\n        <Tooltip title=\"only for relevant files\" /> based on\n      </p>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.nomosMonk}\n        name=\"nomosMonk\"\n        id=\"upload-decider-nomos-monk\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... scanners matches if all Nomos findings are within the Monk findings\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.ojoDecider}\n        name=\"ojoDecider\"\n        id=\"upload-decider-ojo-decider\"\n        onChange={(e) => handleChange(e)}\n      >\n        .. scanners matches if Ojo findings are no contradiction with other\n        findings\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.bulkReused}\n        name=\"bulkReused\"\n        id=\"upload-decider-bulk-reused\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... bulk phrases from reused packages\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={decider.newScanner}\n        name=\"newScanner\"\n        id=\"upload-decider-new-scanner\"\n        onChange={(e) => handleChange(e)}\n      >\n        ... new scanner results, i.e., decisions were marked as work in progress\n        if new scanner finds additional licenses\n      </InputContainer>\n    </div>\n  );\n}\n\nLicenseDecider.propTypes = {\n  decider: PropTypes.shape({\n    nomosMonk: PropTypes.bool.isRequired,\n    bulkReused: PropTypes.bool.isRequired,\n    newScanner: PropTypes.bool.isRequired,\n    ojoDecider: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default LicenseDecider;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Widgets\nimport { InputContainer, Tooltip } from \"components/Widgets\";\n\n// Required services for calling APIs\nimport { getAllFolders } from \"services/folders\";\nimport { getUploadsFolderId } from \"services/organizeUploads\";\nimport { getAllGroups } from \"services/groups\";\n\nimport messages from \"constants/messages\";\n\nconst UploadReuse = ({ reuse, handleChange }) => {\n  const initialGroupList = [{ id: 3, name: \"fossy\" }];\n  const initialFolderList = [\n    {\n      id: 1,\n      name: \"Software Repository\",\n      description: \"Top Folder\",\n      parent: null,\n    },\n  ];\n  const initialUploadList = [\n    {\n      folderId: 1,\n      uploadId: null,\n      uploadName: \"\",\n      uploadDescription: \"\",\n    },\n  ];\n  const [reuseData, setReuseData] = useState({\n    groupList: initialGroupList,\n    folderList: initialFolderList,\n    uploadList: initialUploadList,\n    reuseFolder: 1,\n  });\n\n  useEffect(() => {\n    setReuseData((prevData) => ({ ...prevData, groupList: getAllGroups() }));\n  }, []);\n\n  useEffect(() => {\n    getAllFolders(reuse.reuseGroup)\n      .then((res) => {\n        setReuseData((prevData) => ({ ...prevData, folderList: res }));\n      })\n      .catch(() => {});\n  }, [reuse.reuseGroup]);\n\n  useEffect(() => {\n    getUploadsFolderId(reuseData.reuseFolder, reuse.reuseGroup)\n      .then((res) => {\n        setReuseData((prevData) => ({ ...prevData, uploadList: res }));\n      })\n      .catch(() => {});\n  }, [reuse.reuseGroup, reuseData.reuseFolder]);\n\n  const handleReuseDataChange = (e) => {\n    setReuseData((prevData) => ({\n      ...prevData,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  return (\n    <div id=\"upload-reuse\" className=\"mt-4\">\n      <p className=\"font-demi\">\n        (Optional) Reuse\n        <Tooltip title=\"copy clearing decisions if there is the same file hash between two files\" />\n      </p>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseGroup\"\n        id=\"upload-file-reuse-group\"\n        onChange={handleChange}\n        options={reuseData.groupList}\n        value={reuse.reuseGroup}\n        property=\"name\"\n        valueProperty=\"name\"\n        noDataMessage={messages.noGroup}\n      >\n        Select the reuse group:\n      </InputContainer>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseFolder\"\n        id=\"upload-file-reuse-folder\"\n        onChange={handleReuseDataChange}\n        options={reuseData.folderList}\n        value={reuseData.reuseFolder}\n        property=\"name\"\n        noDataMessage={messages.noFolder}\n      >\n        Select the reuse folder:\n      </InputContainer>\n      <InputContainer\n        type=\"select\"\n        name=\"reuseUpload\"\n        id=\"upload-file-reuse-upload\"\n        onChange={handleChange}\n        options={reuseData.uploadList}\n        value={parseInt(reuse.reuseUpload, 10)}\n        property=\"uploadname\"\n        valueProperty=\"id\"\n        noDataMessage={messages.noUploads}\n      >\n        Select the reuse upload:\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseEnhanced}\n        name=\"reuseEnhanced\"\n        id=\"upload-file-reuse-enhanced\"\n        onChange={handleChange}\n      >\n        Enhanced reuse (slower)\n        <Tooltip title=\"will copy a clearing decision if the two files differ by one line determined by a diff tool\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseMain}\n        name=\"reuseMain\"\n        id=\"upload-file-reuse-main\"\n        onChange={handleChange}\n      >\n        Reuse main license/s\n        <Tooltip title=\"will copy a main license decision if any\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseReport}\n        name=\"reuseReport\"\n        id=\"upload-file-reuse-report\"\n        onChange={handleChange}\n      >\n        Reuse report configuration settings\n        <Tooltip title=\"use to copy all the information from conf page(if any)\" />\n      </InputContainer>\n      <InputContainer\n        type=\"checkbox\"\n        checked={reuse.reuseCopyright}\n        name=\"reuseCopyright\"\n        id=\"upload-file-reuse-copyright\"\n        onChange={handleChange}\n      >\n        Reuse edited and deactivated copyrights\n        <Tooltip title=\"use to copy edited and deactivated copyrights from the reused package\" />\n      </InputContainer>\n    </div>\n  );\n};\n\nUploadReuse.propTypes = {\n  reuse: PropTypes.shape({\n    reuseUpload: PropTypes.number.isRequired,\n    reuseGroup: PropTypes.string.isRequired,\n    reuseMain: PropTypes.bool.isRequired,\n    reuseEnhanced: PropTypes.bool.isRequired,\n    reuseReport: PropTypes.bool.isRequired,\n    reuseCopyright: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func,\n};\n\nexport default UploadReuse;\n","/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com), Aman Dwivedi (aman.dwivedi5@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport IgnoreScm from \"./IgnoreScm\";\nimport AccessLevel from \"./AccessLevel\";\nimport OptionalAnalysis from \"./OptionalAnalysis\";\nimport LicenseDecider from \"./LicenseDecider\";\nimport UploadReuse from \"./UploadReuse\";\n\nfunction CommonFields({\n  accessLevel,\n  ignoreScm,\n  analysis,\n  decider,\n  reuse,\n  handleChange,\n  handleScanChange,\n}) {\n  return (\n    <>\n      {ignoreScm && (\n        <IgnoreScm ignoreScm={ignoreScm} handleChange={handleChange} />\n      )}\n      {accessLevel && (\n        <AccessLevel accessLevel={accessLevel} handleChange={handleChange} />\n      )}\n      {analysis && (\n        <OptionalAnalysis analysis={analysis} handleChange={handleScanChange} />\n      )}\n      {decider && (\n        <LicenseDecider decider={decider} handleChange={handleScanChange} />\n      )}\n      {reuse && <UploadReuse reuse={reuse} handleChange={handleScanChange} />}\n    </>\n  );\n}\n\nCommonFields.propTypes = {\n  accessLevel: PropTypes.string,\n  ignoreScm: PropTypes.bool,\n  analysis: PropTypes.shape({\n    bucket: PropTypes.bool.isRequired,\n    copyrightEmailAuthor: PropTypes.bool.isRequired,\n    ecc: PropTypes.bool.isRequired,\n    keyword: PropTypes.bool.isRequired,\n    mime: PropTypes.bool.isRequired,\n    monk: PropTypes.bool.isRequired,\n    nomos: PropTypes.bool.isRequired,\n    ojo: PropTypes.bool.isRequired,\n    package: PropTypes.bool.isRequired,\n  }).isRequired,\n  decider: PropTypes.shape({\n    nomosMonk: PropTypes.bool.isRequired,\n    bulkReused: PropTypes.bool.isRequired,\n    newScanner: PropTypes.bool.isRequired,\n    ojoDecider: PropTypes.bool.isRequired,\n  }).isRequired,\n  reuse: PropTypes.shape({\n    reuseUpload: PropTypes.number.isRequired,\n    reuseGroup: PropTypes.string.isRequired,\n    reuseMain: PropTypes.bool.isRequired,\n    reuseEnhanced: PropTypes.bool.isRequired,\n    reuseReport: PropTypes.bool.isRequired,\n    reuseCopyright: PropTypes.bool.isRequired,\n  }).isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleScanChange: PropTypes.func.isRequired,\n};\n\nexport default CommonFields;\n"],"sourceRoot":""}