{"version":3,"sources":["pages/Organize/License/Create/index.jsx"],"names":["AddCandidateLicense","useState","shortName","fullName","text","risk","licenseUrl","mergeRequest","createLicenseData","setCreateLicenseData","loading","setLoading","showMessage","setShowMessage","type","message","setMessage","handleChange","e","target","name","checked","value","title","className","setShow","id","placeholder","onChange","createCandidateLicense","htmlFor","rows","options","property","onClick","preventDefault","then","messages","createdLicense","catch","error","finally","as","animation","size","role"],"mappings":"+LA6MeA,UA/Ka,WAC1B,IAoCA,EAAkDC,mBAd7B,CACnBC,UAAW,GACXC,SAAU,GACVC,KAAM,GACNC,KAAM,EACNC,WAAY,GACZC,cAAc,IAQhB,mBAAOC,EAAP,KAA0BC,EAA1B,KAGA,EAA8BR,oBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAsCV,oBAAS,GAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAA8BZ,mBAXP,CACrBa,KAAM,UACNV,KAAM,KASR,mBAAOW,EAAP,KAAgBC,EAAhB,KAEMC,EAAe,SAACC,GACE,aAAlBA,EAAEC,OAAOL,KACXL,EAAqB,2BAChBD,GADe,kBAEjBU,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,WAG5BZ,EAAqB,2BAChBD,GADe,kBAEjBU,EAAEC,OAAOC,KAAOF,EAAEC,OAAOG,UAyBhC,OACE,qCACE,cAAC,IAAD,CAAOC,MAAM,6BACb,sBAAKC,UAAU,sBAAf,UACGZ,GACC,cAAC,IAAD,CACEE,KAAMC,EAAQD,KACdW,QAASZ,EACTE,QAASA,EAAQX,OAGrB,qBAAKoB,UAAU,MAAf,SACE,sBAAKA,UAAU,sCAAf,UACE,oBAAIA,UAAU,yBAAd,yBACA,uBACA,iCACE,cAAC,IAAD,CACEF,MAAOd,EAAkBN,UACzBkB,KAAK,YACLN,KAAK,OACLY,GAAG,kCACHC,YAAY,iBACZC,SAAUX,EANZ,wBAUA,cAAC,IAAD,CACEK,MAAOO,IAAuB1B,SAC9BiB,KAAK,WACLN,KAAK,OACLY,GAAG,iCACHE,SAAUX,EALZ,uBASA,qBAAKO,UAAU,OAAf,SACE,wBAAOM,QAAQ,SAASN,UAAU,kBAAlC,2BAEE,0BACEJ,KAAK,OACLI,UAAU,kDACVF,MAAOO,IAAuBzB,KAC9BsB,GAAG,4BACHK,KAAK,IACLH,SAAU,SAACV,GAAD,OAAOD,EAAaC,WAIpC,cAAC,IAAD,CACEI,MAAOO,IAAuBvB,WAC9Bc,KAAK,aACLN,KAAK,OACLY,GAAG,gCACHE,SAAUX,EALZ,iBASA,cAAC,IAAD,CACEe,QAvIE,CACd,CACEN,GAAI,EACJJ,MAAO,GAET,CACEI,GAAI,EACJJ,MAAO,GAET,CACEI,GAAI,EACJJ,MAAO,GAET,CACEI,GAAI,EACJJ,MAAO,GAET,CACEI,GAAI,EACJJ,MAAO,IAqHGF,KAAK,OACLN,KAAK,SACLmB,SAAS,QACTP,GAAG,kCACHE,SAAUX,EANZ,wBAUA,cAAC,IAAD,CACEH,KAAK,WACLO,QAASb,EAAkBD,aAC3Ba,KAAK,eACLM,GAAG,qCACHE,SAAU,SAACV,GAAD,OAAOD,EAAaC,IALhC,2BASA,cAAC,IAAD,CAAQJ,KAAK,SAASoB,QAjGb,SAAChB,GACpBA,EAAEiB,iBACFxB,GAAW,GACXkB,YAAuBrB,GACpB4B,MAAK,WACJpB,EAAW,CACTF,KAAM,UACNV,KAAMiC,IAASC,oBAGlBC,OAAM,SAACC,GACNxB,EAAW,CACTF,KAAM,SACNV,KAAMoC,EAAMzB,aAGf0B,SAAQ,WACP9B,GAAW,GACXE,GAAe,OA+EoCW,UAAU,OAAvD,SACGd,EACC,cAAC,IAAD,CACEgC,GAAG,OACHC,UAAU,SACVC,KAAK,KACLC,KAAK,SACL,cAAY,SAGd","file":"static/js/52.795bc623.chunk.js","sourcesContent":["/*\n Copyright (C) 2021 Shruti Agarwal (mail2shruti.ag@gmail.com)\n\n SPDX-License-Identifier: GPL-2.0\n\n This program is free software; you can redistribute it and/or\n modify it under the terms of the GNU General Public License\n version 2 as published by the Free Software Foundation.\n This program is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU General Public License for more details.\n\n You should have received a copy of the GNU General Public License along\n with this program; if not, write to the Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n*/\n\nimport React, { useState } from \"react\";\nimport messages from \"constants/messages\";\n\n// Title\nimport Title from \"components/Title\";\n\n// Widgets\nimport { Alert, Button, InputContainer, Spinner } from \"components/Widgets\";\n\n// Required functions for calling APIs\nimport { createCandidateLicense } from \"services/licenses\";\n\nconst AddCandidateLicense = () => {\n  const options = [\n    {\n      id: 1,\n      value: 1,\n    },\n    {\n      id: 2,\n      value: 2,\n    },\n    {\n      id: 3,\n      value: 3,\n    },\n    {\n      id: 4,\n      value: 4,\n    },\n    {\n      id: 5,\n      value: 5,\n    },\n  ];\n  const initialState = {\n    shortName: \"\",\n    fullName: \"\",\n    text: \"\",\n    risk: 1,\n    licenseUrl: \"\",\n    mergeRequest: false,\n  };\n  const initialMessage = {\n    type: \"success\",\n    text: \"\",\n  };\n\n  // Data required for creating the candidate license\n  const [createLicenseData, setCreateLicenseData] = useState(initialState);\n\n  // State Variables for handling Error Boundaries\n  const [loading, setLoading] = useState(false);\n  const [showMessage, setShowMessage] = useState(false);\n  const [message, setMessage] = useState(initialMessage);\n\n  const handleChange = (e) => {\n    if (e.target.type === \"checkbox\") {\n      setCreateLicenseData({\n        ...createLicenseData,\n        [e.target.name]: e.target.checked,\n      });\n    } else {\n      setCreateLicenseData({\n        ...createLicenseData,\n        [e.target.name]: e.target.value,\n      });\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    createCandidateLicense(createLicenseData)\n      .then(() => {\n        setMessage({\n          type: \"success\",\n          text: messages.createdLicense,\n        });\n      })\n      .catch((error) => {\n        setMessage({\n          type: \"danger\",\n          text: error.message,\n        });\n      })\n      .finally(() => {\n        setLoading(false);\n        setShowMessage(true);\n      });\n  };\n  return (\n    <>\n      <Title title=\"Create Candidate License\" />\n      <div className=\"main-container my-3\">\n        {showMessage && (\n          <Alert\n            type={message.type}\n            setShow={setShowMessage}\n            message={message.text}\n          />\n        )}\n        <div className=\"row\">\n          <div className=\"col-lg-8 col-md-12 col-sm-12 col-12\">\n            <h1 className=\"font-size-main-heading\">Add License</h1>\n            <br />\n            <form>\n              <InputContainer\n                value={createLicenseData.shortName}\n                name=\"shortName\"\n                type=\"text\"\n                id=\"organize-add-license-short-name\"\n                placeholder=\"Must be unique\"\n                onChange={handleChange}\n              >\n                Short name\n              </InputContainer>\n              <InputContainer\n                value={createCandidateLicense.fullName}\n                name=\"fullName\"\n                type=\"text\"\n                id=\"organize-add-license-full-name\"\n                onChange={handleChange}\n              >\n                Full name\n              </InputContainer>\n              <div className=\"my-2\">\n                <label htmlFor=\"upload\" className=\"font-demi w-100\">\n                  Reference Text\n                  <textarea\n                    name=\"text\"\n                    className=\"form-control font-regular mt-2 license-textarea\"\n                    value={createCandidateLicense.text}\n                    id=\"organize-add-license-text\"\n                    rows=\"3\"\n                    onChange={(e) => handleChange(e)}\n                  />\n                </label>\n              </div>\n              <InputContainer\n                value={createCandidateLicense.licenseUrl}\n                name=\"licenseUrl\"\n                type=\"text\"\n                id=\"organize-add-license-text-url\"\n                onChange={handleChange}\n              >\n                URL\n              </InputContainer>\n              <InputContainer\n                options={options}\n                name=\"risk\"\n                type=\"select\"\n                property=\"value\"\n                id=\"organize-add-license-risk-level\"\n                onChange={handleChange}\n              >\n                Risk level\n              </InputContainer>\n              <InputContainer\n                type=\"checkbox\"\n                checked={createLicenseData.mergeRequest}\n                name=\"mergeRequest\"\n                id=\"organize-add-license-merge-request\"\n                onChange={(e) => handleChange(e)}\n              >\n                Merge Request\n              </InputContainer>\n              <Button type=\"submit\" onClick={handleSubmit} className=\"mt-4\">\n                {loading ? (\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                ) : (\n                  \"Add License\"\n                )}\n              </Button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddCandidateLicense;\n"],"sourceRoot":""}